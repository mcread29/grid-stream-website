id: cs.temp.dll
language: CSharp
name:
  Default: cs.temp.dll
qualifiedName:
  Default: cs.temp.dll
type: Assembly
modifiers: {}
items:
- id: Global
  language: CSharp
  name:
    CSharp: Global
    VB: ''
  nameWithType:
    CSharp: Global
    VB: ''
  qualifiedName:
    CSharp: Global
    VB: ''
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Global.ExampleScript
    commentId: T:Global.ExampleScript
    language: CSharp
    name:
      CSharp: ExampleScript
      VB: ExampleScript
    nameWithType:
      CSharp: ExampleScript
      VB: ExampleScript
    qualifiedName:
      CSharp: ExampleScript
      VB: ExampleScript
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Global
    source:
      id: ExampleScript
      path: ''
      startLine: 6
    syntax:
      content:
        CSharp: 'public class ExampleScript : MonoBehaviour'
        VB: >-
          Public Class ExampleScript

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Global.ExampleScript.io
      commentId: F:Global.ExampleScript.io
      language: CSharp
      name:
        CSharp: io
        VB: io
      nameWithType:
        CSharp: ExampleScript.io
        VB: ExampleScript.io
      qualifiedName:
        CSharp: ExampleScript.io
        VB: ExampleScript.io
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: io
        path: ''
        startLine: 8
      syntax:
        content:
          CSharp: public SocketIOClient io
          VB: Public io As SocketIOClient
        return:
          type: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ExampleScript.uiStatus
      commentId: F:Global.ExampleScript.uiStatus
      language: CSharp
      name:
        CSharp: uiStatus
        VB: uiStatus
      nameWithType:
        CSharp: ExampleScript.uiStatus
        VB: ExampleScript.uiStatus
      qualifiedName:
        CSharp: ExampleScript.uiStatus
        VB: ExampleScript.uiStatus
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: uiStatus
        path: ''
        startLine: 9
      syntax:
        content:
          CSharp: public Text uiStatus
          VB: Public uiStatus As Text
        return:
          type: Global.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ExampleScript.uiGreeting
      commentId: F:Global.ExampleScript.uiGreeting
      language: CSharp
      name:
        CSharp: uiGreeting
        VB: uiGreeting
      nameWithType:
        CSharp: ExampleScript.uiGreeting
        VB: ExampleScript.uiGreeting
      qualifiedName:
        CSharp: ExampleScript.uiGreeting
        VB: ExampleScript.uiGreeting
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: uiGreeting
        path: ''
        startLine: 9
      syntax:
        content:
          CSharp: public Text uiGreeting
          VB: Public uiGreeting As Text
        return:
          type: Global.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Global.ExampleScript.uiPodName
      commentId: F:Global.ExampleScript.uiPodName
      language: CSharp
      name:
        CSharp: uiPodName
        VB: uiPodName
      nameWithType:
        CSharp: ExampleScript.uiPodName
        VB: ExampleScript.uiPodName
      qualifiedName:
        CSharp: ExampleScript.uiPodName
        VB: ExampleScript.uiPodName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Global
      source:
        id: uiPodName
        path: ''
        startLine: 9
      syntax:
        content:
          CSharp: public Text uiPodName
          VB: Public uiPodName As Text
        return:
          type: Global.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Firesplash.GameDevAssets.SocketIOPlus
  commentId: N:Firesplash.GameDevAssets.SocketIOPlus
  language: CSharp
  name:
    CSharp: Firesplash.GameDevAssets.SocketIOPlus
    VB: Firesplash.GameDevAssets.SocketIOPlus
  nameWithType:
    CSharp: Firesplash.GameDevAssets.SocketIOPlus
    VB: Firesplash.GameDevAssets.SocketIOPlus
  qualifiedName:
    CSharp: Firesplash.GameDevAssets.SocketIOPlus
    VB: Firesplash.GameDevAssets.SocketIOPlus
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Firesplash.GameDevAssets.SocketIOPlus.DataTypes
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.DataTypes
    language: CSharp
    name:
      CSharp: DataTypes
      VB: DataTypes
    nameWithType:
      CSharp: DataTypes
      VB: DataTypes
    qualifiedName:
      CSharp: Firesplash.GameDevAssets.SocketIOPlus.DataTypes
      VB: Firesplash.GameDevAssets.SocketIOPlus.DataTypes
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Firesplash.GameDevAssets.SocketIOPlus
    source:
      id: DataTypes
      path: ''
      startLine: 1359
    summary: "\nContains simple DataTypes used for Socket.IO communication and states\n"
    example: []
    syntax:
      content:
        CSharp: public static class DataTypes
        VB: Public Module DataTypes
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items: []
  - id: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ConnectionState
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ConnectionState
    language: CSharp
    name:
      CSharp: DataTypes.ConnectionState
      VB: DataTypes.ConnectionState
    nameWithType:
      CSharp: DataTypes.ConnectionState
      VB: DataTypes.ConnectionState
    qualifiedName:
      CSharp: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ConnectionState
      VB: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ConnectionState
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Firesplash.GameDevAssets.SocketIOPlus
    source:
      id: ConnectionState
      path: ''
      startLine: 1361
    syntax:
      content:
        CSharp: public enum ConnectionState
        VB: Public Enum ConnectionState
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ConnectionState.NONE
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ConnectionState.NONE
      language: CSharp
      name:
        CSharp: NONE
        VB: NONE
      nameWithType:
        CSharp: DataTypes.ConnectionState.NONE
        VB: DataTypes.ConnectionState.NONE
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ConnectionState.NONE
        VB: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ConnectionState.NONE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: NONE
        path: ''
        startLine: 1363
      syntax:
        content:
          CSharp: NONE = 0
          VB: NONE = 0
        return:
          type: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ConnectionState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ConnectionState.CONNECTING
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ConnectionState.CONNECTING
      language: CSharp
      name:
        CSharp: CONNECTING
        VB: CONNECTING
      nameWithType:
        CSharp: DataTypes.ConnectionState.CONNECTING
        VB: DataTypes.ConnectionState.CONNECTING
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ConnectionState.CONNECTING
        VB: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ConnectionState.CONNECTING
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: CONNECTING
        path: ''
        startLine: 1364
      syntax:
        content:
          CSharp: CONNECTING = 1
          VB: CONNECTING = 1
        return:
          type: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ConnectionState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ConnectionState.CONNECTED
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ConnectionState.CONNECTED
      language: CSharp
      name:
        CSharp: CONNECTED
        VB: CONNECTED
      nameWithType:
        CSharp: DataTypes.ConnectionState.CONNECTED
        VB: DataTypes.ConnectionState.CONNECTED
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ConnectionState.CONNECTED
        VB: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ConnectionState.CONNECTED
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: CONNECTED
        path: ''
        startLine: 1365
      syntax:
        content:
          CSharp: CONNECTED = 2
          VB: CONNECTED = 2
        return:
          type: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ConnectionState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ConnectionState.DISCONNECTED
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ConnectionState.DISCONNECTED
      language: CSharp
      name:
        CSharp: DISCONNECTED
        VB: DISCONNECTED
      nameWithType:
        CSharp: DataTypes.ConnectionState.DISCONNECTED
        VB: DataTypes.ConnectionState.DISCONNECTED
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ConnectionState.DISCONNECTED
        VB: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ConnectionState.DISCONNECTED
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: DISCONNECTED
        path: ''
        startLine: 1366
      syntax:
        content:
          CSharp: DISCONNECTED = 3
          VB: DISCONNECTED = 3
        return:
          type: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ConnectionState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType
    language: CSharp
    name:
      CSharp: DataTypes.PacketType
      VB: DataTypes.PacketType
    nameWithType:
      CSharp: DataTypes.PacketType
      VB: DataTypes.PacketType
    qualifiedName:
      CSharp: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType
      VB: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Firesplash.GameDevAssets.SocketIOPlus
    source:
      id: PacketType
      path: ''
      startLine: 1369
    syntax:
      content:
        CSharp: public enum PacketType
        VB: Public Enum PacketType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType.CONNECT
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType.CONNECT
      language: CSharp
      name:
        CSharp: CONNECT
        VB: CONNECT
      nameWithType:
        CSharp: DataTypes.PacketType.CONNECT
        VB: DataTypes.PacketType.CONNECT
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType.CONNECT
        VB: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType.CONNECT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: CONNECT
        path: ''
        startLine: 1371
      syntax:
        content:
          CSharp: CONNECT = 0
          VB: CONNECT = 0
        return:
          type: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType.DISCONNECT
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType.DISCONNECT
      language: CSharp
      name:
        CSharp: DISCONNECT
        VB: DISCONNECT
      nameWithType:
        CSharp: DataTypes.PacketType.DISCONNECT
        VB: DataTypes.PacketType.DISCONNECT
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType.DISCONNECT
        VB: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType.DISCONNECT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: DISCONNECT
        path: ''
        startLine: 1372
      syntax:
        content:
          CSharp: DISCONNECT = 1
          VB: DISCONNECT = 1
        return:
          type: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType.EVENT
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType.EVENT
      language: CSharp
      name:
        CSharp: EVENT
        VB: EVENT
      nameWithType:
        CSharp: DataTypes.PacketType.EVENT
        VB: DataTypes.PacketType.EVENT
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType.EVENT
        VB: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType.EVENT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: EVENT
        path: ''
        startLine: 1373
      syntax:
        content:
          CSharp: EVENT = 2
          VB: EVENT = 2
        return:
          type: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType.ACK
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType.ACK
      language: CSharp
      name:
        CSharp: ACK
        VB: ACK
      nameWithType:
        CSharp: DataTypes.PacketType.ACK
        VB: DataTypes.PacketType.ACK
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType.ACK
        VB: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType.ACK
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: ACK
        path: ''
        startLine: 1374
      syntax:
        content:
          CSharp: ACK = 3
          VB: ACK = 3
        return:
          type: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType.CONNECT_ERROR
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType.CONNECT_ERROR
      language: CSharp
      name:
        CSharp: CONNECT_ERROR
        VB: CONNECT_ERROR
      nameWithType:
        CSharp: DataTypes.PacketType.CONNECT_ERROR
        VB: DataTypes.PacketType.CONNECT_ERROR
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType.CONNECT_ERROR
        VB: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType.CONNECT_ERROR
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: CONNECT_ERROR
        path: ''
        startLine: 1375
      syntax:
        content:
          CSharp: CONNECT_ERROR = 4
          VB: CONNECT_ERROR = 4
        return:
          type: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType.BINARY_EVENT
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType.BINARY_EVENT
      language: CSharp
      name:
        CSharp: BINARY_EVENT
        VB: BINARY_EVENT
      nameWithType:
        CSharp: DataTypes.PacketType.BINARY_EVENT
        VB: DataTypes.PacketType.BINARY_EVENT
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType.BINARY_EVENT
        VB: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType.BINARY_EVENT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: BINARY_EVENT
        path: ''
        startLine: 1376
      syntax:
        content:
          CSharp: BINARY_EVENT = 5
          VB: BINARY_EVENT = 5
        return:
          type: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType.BINARY_ACK
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType.BINARY_ACK
      language: CSharp
      name:
        CSharp: BINARY_ACK
        VB: BINARY_ACK
      nameWithType:
        CSharp: DataTypes.PacketType.BINARY_ACK
        VB: DataTypes.PacketType.BINARY_ACK
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType.BINARY_ACK
        VB: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType.BINARY_ACK
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: BINARY_ACK
        path: ''
        startLine: 1377
      syntax:
        content:
          CSharp: BINARY_ACK = 6
          VB: BINARY_ACK = 6
        return:
          type: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOException
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOException
    language: CSharp
    name:
      CSharp: DataTypes.SocketIOException
      VB: DataTypes.SocketIOException
    nameWithType:
      CSharp: DataTypes.SocketIOException
      VB: DataTypes.SocketIOException
    qualifiedName:
      CSharp: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOException
      VB: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOException
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Firesplash.GameDevAssets.SocketIOPlus
    source:
      id: SocketIOException
      path: ''
      startLine: 1383
    summary: "\nThis is the base class all Socket.IO-Exceptions derive from\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SocketIOException : Exception, ISerializable'
        VB: >-
          Public Class SocketIOException

              Inherits Exception

              Implements ISerializable
    inheritance:
    - System.Object
    - System.Exception
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOException.#ctor(System.String)
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOException.#ctor(System.String)
      language: CSharp
      name:
        CSharp: SocketIOException(String)
        VB: SocketIOException(String)
      nameWithType:
        CSharp: DataTypes.SocketIOException.SocketIOException(String)
        VB: DataTypes.SocketIOException.SocketIOException(String)
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOException.SocketIOException(System.String)
        VB: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOException.SocketIOException(System.String)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: .ctor
        path: ''
        startLine: 1384
      syntax:
        content:
          CSharp: public SocketIOException(string message)
          VB: Public Sub New(message As String)
        parameters:
        - id: message
          type: System.String
      overload: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOException.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOProtocolViolationException
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOProtocolViolationException
    language: CSharp
    name:
      CSharp: DataTypes.SocketIOProtocolViolationException
      VB: DataTypes.SocketIOProtocolViolationException
    nameWithType:
      CSharp: DataTypes.SocketIOProtocolViolationException
      VB: DataTypes.SocketIOProtocolViolationException
    qualifiedName:
      CSharp: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOProtocolViolationException
      VB: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOProtocolViolationException
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Firesplash.GameDevAssets.SocketIOPlus
    source:
      id: SocketIOProtocolViolationException
      path: ''
      startLine: 1392
    summary: "\nThis exception is thrown, when the application is trying to violate a protocol constraint.\nThere are only rare possibilities to do so, though.\nThis exception is NOT thrown for incoming packages!\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SocketIOProtocolViolationException : DataTypes.SocketIOException, ISerializable'
        VB: >-
          Public Class SocketIOProtocolViolationException

              Inherits DataTypes.SocketIOException

              Implements ISerializable
    inheritance:
    - System.Object
    - System.Exception
    - Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOException
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOProtocolViolationException.#ctor(System.String)
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOProtocolViolationException.#ctor(System.String)
      language: CSharp
      name:
        CSharp: SocketIOProtocolViolationException(String)
        VB: SocketIOProtocolViolationException(String)
      nameWithType:
        CSharp: DataTypes.SocketIOProtocolViolationException.SocketIOProtocolViolationException(String)
        VB: DataTypes.SocketIOProtocolViolationException.SocketIOProtocolViolationException(String)
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOProtocolViolationException.SocketIOProtocolViolationException(System.String)
        VB: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOProtocolViolationException.SocketIOProtocolViolationException(System.String)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: .ctor
        path: ''
        startLine: 1393
      syntax:
        content:
          CSharp: public SocketIOProtocolViolationException(string message)
          VB: Public Sub New(message As String)
        parameters:
        - id: message
          type: System.String
      overload: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOProtocolViolationException.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOAuthPayloadCallback
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOAuthPayloadCallback
    language: CSharp
    name:
      CSharp: DataTypes.SocketIOAuthPayloadCallback
      VB: DataTypes.SocketIOAuthPayloadCallback
    nameWithType:
      CSharp: DataTypes.SocketIOAuthPayloadCallback
      VB: DataTypes.SocketIOAuthPayloadCallback
    qualifiedName:
      CSharp: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOAuthPayloadCallback
      VB: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOAuthPayloadCallback
    type: Delegate
    assemblies:
    - cs.temp.dll
    namespace: Firesplash.GameDevAssets.SocketIOPlus
    source:
      id: SocketIOAuthPayloadCallback
      path: ''
      startLine: 1402
    summary: "\nThis delegate gets called when a Socket.IO namespace is being connected.\nYour function must return null if not auht payload is required for the namespace,\nor an object that can be serialized by Json.Net if a payload must be provided\n"
    example: []
    syntax:
      content:
        CSharp: public delegate object SocketIOAuthPayloadCallback(string namespacePath);
        VB: Public Delegate Function SocketIOAuthPayloadCallback(namespacePath As String) As Object
      parameters:
      - id: namespacePath
        type: System.String
        description: The Socket.IO namespace path (e.g. &quot;/&quot;) for which authentication data is requested
      return:
        type: System.Object
    modifiers:
      CSharp:
      - public
      - delegate
      VB:
      - Public
      - Delegate
    items: []
  - id: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ThreadedSocketIOEvent
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ThreadedSocketIOEvent
    language: CSharp
    name:
      CSharp: DataTypes.ThreadedSocketIOEvent
      VB: DataTypes.ThreadedSocketIOEvent
    nameWithType:
      CSharp: DataTypes.ThreadedSocketIOEvent
      VB: DataTypes.ThreadedSocketIOEvent
    qualifiedName:
      CSharp: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ThreadedSocketIOEvent
      VB: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ThreadedSocketIOEvent
    type: Delegate
    assemblies:
    - cs.temp.dll
    namespace: Firesplash.GameDevAssets.SocketIOPlus
    source:
      id: ThreadedSocketIOEvent
      path: ''
      startLine: 1416
    summary: "\nThis delegate gets called on a namespace for any Socket.IO event (received or internally generated).\nThe delegate is invoked from a Thread so it is not safe to access Unity functions from it.\n"
    example: []
    syntax:
      content:
        CSharp: public delegate void ThreadedSocketIOEvent(SocketIOEvent sioEvent);
        VB: Public Delegate Sub ThreadedSocketIOEvent(sioEvent As SocketIOEvent)
      parameters:
      - id: sioEvent
        type: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent
        description: ''
    modifiers:
      CSharp:
      - public
      - delegate
      VB:
      - Public
      - Delegate
    items: []
  - id: Firesplash.GameDevAssets.SocketIOPlus.DefaultParser
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.DefaultParser
    language: CSharp
    name:
      CSharp: DefaultParser
      VB: DefaultParser
    nameWithType:
      CSharp: DefaultParser
      VB: DefaultParser
    qualifiedName:
      CSharp: Firesplash.GameDevAssets.SocketIOPlus.DefaultParser
      VB: Firesplash.GameDevAssets.SocketIOPlus.DefaultParser
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Firesplash.GameDevAssets.SocketIOPlus
    source:
      id: DefaultParser
      path: ''
      startLine: 1434
    summary: "\nThis implemented the default Socket.IO parser to parse string typed EngineIO messages into Socket.IO and encode packets vice versa.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class DefaultParser : Parser'
        VB: >-
          Public Class DefaultParser

              Inherits Parser
    inheritance:
    - System.Object
    - Firesplash.GameDevAssets.SocketIOPlus.Parser
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Firesplash.GameDevAssets.SocketIOPlus.DefaultParser.Parse(EngineIOPacket,Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient)
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.DefaultParser.Parse(EngineIOPacket,Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient)
      language: CSharp
      name:
        CSharp: Parse(EngineIOPacket, SocketIOClient)
        VB: Parse(EngineIOPacket, SocketIOClient)
      nameWithType:
        CSharp: DefaultParser.Parse(EngineIOPacket, SocketIOClient)
        VB: DefaultParser.Parse(EngineIOPacket, SocketIOClient)
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.DefaultParser.Parse(EngineIOPacket, Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient)
        VB: Firesplash.GameDevAssets.SocketIOPlus.DefaultParser.Parse(EngineIOPacket, Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: Parse
        path: ''
        startLine: 1442
      summary: "\nThis creates a Socket.IO packet from the string types Engine.IO message\nBinary payloads can then be added to the package.\n"
      example: []
      syntax:
        content:
          CSharp: public override SocketIOPacket Parse(EngineIOPacket eioPacket, SocketIOClient client)
          VB: Public Overrides Function Parse(eioPacket As EngineIOPacket, client As SocketIOClient) As SocketIOPacket
        parameters:
        - id: eioPacket
          type: Global.EngineIOPacket
        - id: client
          type: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient
        return:
          type: Firesplash.GameDevAssets.SocketIOPlus.SocketIOPacket
          description: ''
      overload: Firesplash.GameDevAssets.SocketIOPlus.DefaultParser.Parse*
      overridden: Firesplash.GameDevAssets.SocketIOPlus.Parser.Parse(EngineIOPacket,Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: Firesplash.GameDevAssets.SocketIOPlus.Parser
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.Parser
    language: CSharp
    name:
      CSharp: Parser
      VB: Parser
    nameWithType:
      CSharp: Parser
      VB: Parser
    qualifiedName:
      CSharp: Firesplash.GameDevAssets.SocketIOPlus.Parser
      VB: Firesplash.GameDevAssets.SocketIOPlus.Parser
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Firesplash.GameDevAssets.SocketIOPlus
    source:
      id: Parser
      path: ''
      startLine: 1659
    summary: "\nThis is a skeleton class for writing Socket.IO / Engine.IO transcoders\n"
    example: []
    syntax:
      content:
        CSharp: public class Parser
        VB: Public Class Parser
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Firesplash.GameDevAssets.SocketIOPlus.Parser.Parse(EngineIOPacket,Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient)
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.Parser.Parse(EngineIOPacket,Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient)
      language: CSharp
      name:
        CSharp: Parse(EngineIOPacket, SocketIOClient)
        VB: Parse(EngineIOPacket, SocketIOClient)
      nameWithType:
        CSharp: Parser.Parse(EngineIOPacket, SocketIOClient)
        VB: Parser.Parse(EngineIOPacket, SocketIOClient)
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.Parser.Parse(EngineIOPacket, Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient)
        VB: Firesplash.GameDevAssets.SocketIOPlus.Parser.Parse(EngineIOPacket, Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: Parse
        path: ''
        startLine: 1668
      summary: "\nThis creates a Socket.IO packet from the string types Engine.IO message\nBinary payloads can then be added to the package.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual SocketIOPacket Parse(EngineIOPacket eioPacket, SocketIOClient client)
          VB: Public Overridable Function Parse(eioPacket As EngineIOPacket, client As SocketIOClient) As SocketIOPacket
        parameters:
        - id: eioPacket
          type: Global.EngineIOPacket
          description: The Engine.IO packet to parse
        - id: client
          type: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient
          description: A reference to the Scoket.IO client
        return:
          type: Firesplash.GameDevAssets.SocketIOPlus.SocketIOPacket
          description: A Socket.IO packet instance
      overload: Firesplash.GameDevAssets.SocketIOPlus.Parser.Parse*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
  - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient
    language: CSharp
    name:
      CSharp: SocketIOClient
      VB: SocketIOClient
    nameWithType:
      CSharp: SocketIOClient
      VB: SocketIOClient
    qualifiedName:
      CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient
      VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Firesplash.GameDevAssets.SocketIOPlus
    source:
      id: SocketIOClient
      path: ''
      startLine: 1701
    summary: "\nThis MonoBehavior derives from EngineIOClient and implements the main Socket.IO Manager logic on top of Engine.IO.\nIt implements Socket.IO protocol version 5 (which is used by Socket.IO v3 and v4)\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SocketIOClient : EngineIOClient'
        VB: >-
          Public Class SocketIOClient

              Inherits EngineIOClient
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.maxConnectAttempts
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.maxConnectAttempts
      language: CSharp
      name:
        CSharp: maxConnectAttempts
        VB: maxConnectAttempts
      nameWithType:
        CSharp: SocketIOClient.maxConnectAttempts
        VB: SocketIOClient.maxConnectAttempts
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.maxConnectAttempts
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.maxConnectAttempts
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: maxConnectAttempts
        path: ''
        startLine: 1730
      summary: "\nIf the connection (or a reconnect) is not successful after n attempts, cancel trying to (re)connect.\nA value of zero means infinitely.\n"
      example: []
      syntax:
        content:
          CSharp: public int maxConnectAttempts
          VB: Public maxConnectAttempts As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.raisingReconnectDelay
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.raisingReconnectDelay
      language: CSharp
      name:
        CSharp: raisingReconnectDelay
        VB: raisingReconnectDelay
      nameWithType:
        CSharp: SocketIOClient.raisingReconnectDelay
        VB: SocketIOClient.raisingReconnectDelay
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.raisingReconnectDelay
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.raisingReconnectDelay
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: raisingReconnectDelay
        path: ''
        startLine: 1738
      summary: "\nAfter a failure, (re)connection attempts will be delayed by initially one second.\nOn every failure the delay is raised by 50% and ceiled (1, 2, 3, 5, 8, 12, ...) up to 60 seconds.\nOn a successful (re)connect this delay is reset to one second.\nIf you set this value to false, the delay will always be one second +/-20% jitter.\n"
      example: []
      syntax:
        content:
          CSharp: public bool raisingReconnectDelay
          VB: Public raisingReconnectDelay As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.D
      commentId: P:Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.D
      language: CSharp
      name:
        CSharp: D
        VB: D
      nameWithType:
        CSharp: SocketIOClient.D
        VB: SocketIOClient.D
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.D
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.D
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: D
        path: ''
        startLine: 1747
      summary: "\nThis is a shorthand to access the default namespace without having to write the whole namespace call every time for simple applications.\n"
      example: []
      syntax:
        content:
          CSharp: public SocketIONamespace D { get; }
          VB: Public ReadOnly Property D As SocketIONamespace
        parameters: []
        return:
          type: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace
      overload: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.D*
      see:
      - linkId: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.DefaultNamespace
        commentId: P:Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.DefaultNamespace
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
      references:
        Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.DefaultNamespace: 
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.DefaultNamespace
      commentId: P:Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.DefaultNamespace
      language: CSharp
      name:
        CSharp: DefaultNamespace
        VB: DefaultNamespace
      nameWithType:
        CSharp: SocketIOClient.DefaultNamespace
        VB: SocketIOClient.DefaultNamespace
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.DefaultNamespace
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.DefaultNamespace
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: DefaultNamespace
        path: ''
        startLine: 1758
      summary: "\nThis is a shorthand to access the default namespace without having to write the whole namespace call every time for simple applications.\nWant it even shorter? Use &quot;D&quot; :o)\n"
      example: []
      syntax:
        content:
          CSharp: public SocketIONamespace DefaultNamespace { get; }
          VB: Public ReadOnly Property DefaultNamespace As SocketIONamespace
        parameters: []
        return:
          type: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace
      overload: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.DefaultNamespace*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.GetNamespace(System.String,System.Boolean)
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.GetNamespace(System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: GetNamespace(String, Boolean)
        VB: GetNamespace(String, Boolean)
      nameWithType:
        CSharp: SocketIOClient.GetNamespace(String, Boolean)
        VB: SocketIOClient.GetNamespace(String, Boolean)
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.GetNamespace(System.String, System.Boolean)
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.GetNamespace(System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: GetNamespace
        path: ''
        startLine: 1773
      summary: "\nReturns the API of the Socket.IO Client for the given namesapce and connects to the namespace if it is not already connected.\nIf the underlaying transport is not completely connected yet, the connect to the namespace is delayed until the transport is ready.\n"
      example: []
      syntax:
        content:
          CSharp: public SocketIONamespace GetNamespace(string namespacePath, bool connectIfNotExists = true)
          VB: Public Function GetNamespace(namespacePath As String, connectIfNotExists As Boolean = True) As SocketIONamespace
        parameters:
        - id: namespacePath
          type: System.String
          description: ''
        - id: connectIfNotExists
          type: System.Boolean
          description: Connect to this namespace if it is not connected (returns null if false and not existing)
        return:
          type: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace
          description: ''
      overload: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.GetNamespace*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.LateUpdate
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.LateUpdate
      language: CSharp
      name:
        CSharp: LateUpdate()
        VB: LateUpdate()
      nameWithType:
        CSharp: SocketIOClient.LateUpdate()
        VB: SocketIOClient.LateUpdate()
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.LateUpdate()
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.LateUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: LateUpdate
        path: ''
        startLine: 1832
      syntax:
        content:
          CSharp: protected void LateUpdate()
          VB: Protected Sub LateUpdate
      overload: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.LateUpdate*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.SetAuthPayloadCallback(SocketIOAuthPayloadCallback)
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.SetAuthPayloadCallback(SocketIOAuthPayloadCallback)
      language: CSharp
      name:
        CSharp: SetAuthPayloadCallback(SocketIOAuthPayloadCallback)
        VB: SetAuthPayloadCallback(SocketIOAuthPayloadCallback)
      nameWithType:
        CSharp: SocketIOClient.SetAuthPayloadCallback(SocketIOAuthPayloadCallback)
        VB: SocketIOClient.SetAuthPayloadCallback(SocketIOAuthPayloadCallback)
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.SetAuthPayloadCallback(SocketIOAuthPayloadCallback)
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.SetAuthPayloadCallback(SocketIOAuthPayloadCallback)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: SetAuthPayloadCallback
        path: ''
        startLine: 1861
      summary: "\nThis callback will be called whenever a namespace connects.\nIf the callback returns a value other than null, it will be sent as authentication payload while connecting the namespace.\nThe function is called from GetNamespace, so if you call this method from a thread, the callback also runs on a thread.\nInternally generated connect sequences always call the callback from the main thread.\n"
      example: []
      syntax:
        content:
          CSharp: public void SetAuthPayloadCallback(SocketIOAuthPayloadCallback callback)
          VB: Public Sub SetAuthPayloadCallback(callback As SocketIOAuthPayloadCallback)
        parameters:
        - id: callback
          type: Global.SocketIOAuthPayloadCallback
          description: A SocketIOAuthPayloadCallback delegate
      overload: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.SetAuthPayloadCallback*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.Connect(System.String)
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.Connect(System.String)
      language: CSharp
      name:
        CSharp: Connect(String)
        VB: Connect(String)
      nameWithType:
        CSharp: SocketIOClient.Connect(String)
        VB: SocketIOClient.Connect(String)
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.Connect(System.String)
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.Connect(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: Connect
        path: ''
        startLine: 1866
      syntax:
        content:
          CSharp: public override void Connect(string pServerAddress = null)
          VB: Public Overrides Sub Connect(pServerAddress As String = Nothing)
        parameters:
        - id: pServerAddress
          type: System.String
      overload: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.Connect*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.Disconnect
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.Disconnect
      language: CSharp
      name:
        CSharp: Disconnect()
        VB: Disconnect()
      nameWithType:
        CSharp: SocketIOClient.Disconnect()
        VB: SocketIOClient.Disconnect()
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.Disconnect()
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.Disconnect()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: Disconnect
        path: ''
        startLine: 1872
      syntax:
        content:
          CSharp: public override void Disconnect()
          VB: Public Overrides Sub Disconnect
      overload: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.Disconnect*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.GetParser
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.GetParser
      language: CSharp
      name:
        CSharp: GetParser()
        VB: GetParser()
      nameWithType:
        CSharp: SocketIOClient.GetParser()
        VB: SocketIOClient.GetParser()
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.GetParser()
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.GetParser()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: GetParser
        path: ''
        startLine: 1879
      syntax:
        content:
          CSharp: protected virtual Parser GetParser()
          VB: Protected Overridable Function GetParser As Parser
        return:
          type: Firesplash.GameDevAssets.SocketIOPlus.Parser
      overload: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.GetParser*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.SetParser(Firesplash.GameDevAssets.SocketIOPlus.Parser)
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.SetParser(Firesplash.GameDevAssets.SocketIOPlus.Parser)
      language: CSharp
      name:
        CSharp: SetParser(Parser)
        VB: SetParser(Parser)
      nameWithType:
        CSharp: SocketIOClient.SetParser(Parser)
        VB: SocketIOClient.SetParser(Parser)
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.SetParser(Firesplash.GameDevAssets.SocketIOPlus.Parser)
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.SetParser(Firesplash.GameDevAssets.SocketIOPlus.Parser)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: SetParser
        path: ''
        startLine: 1893
      summary: "\nYou can override the used parser using this method. You can implement your own (or a publicly available) parser and message format.\nPlease remember, that server and clients need to use the same parser (or better said the same message format).\n"
      example: []
      syntax:
        content:
          CSharp: public void SetParser(Parser newParser)
          VB: Public Sub SetParser(newParser As Parser)
        parameters:
        - id: newParser
          type: Firesplash.GameDevAssets.SocketIOPlus.Parser
          description: ''
      overload: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.SetParser*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.On(System.String,UnityAction{System.Object})
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.On(System.String,UnityAction{System.Object})
      language: CSharp
      name:
        CSharp: On(String, UnityAction<Object>)
        VB: On(String, UnityAction(Of Object))
      nameWithType:
        CSharp: SocketIOClient.On(String, UnityAction<Object>)
        VB: SocketIOClient.On(String, UnityAction(Of Object))
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.On(System.String, UnityAction<System.Object>)
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.On(System.String, UnityAction(Of System.Object))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: On
        path: ''
        startLine: 2000
      summary: "\nAllows registering to &quot;low level&quot; manager events. This is NOT a namespaced event listener!\n"
      example: []
      syntax:
        content:
          CSharp: public void On(string eventName, UnityAction<object> callback)
          VB: Public Sub On(eventName As String, callback As UnityAction(Of Object))
        parameters:
        - id: eventName
          type: System.String
          description: The event name (one of error, reconnect, reconnect_attempt, reconnect_error, reconnect_failed)
        - id: callback
          type: Global.UnityAction{System.Object}
          description: The callback to be called. The parameter contains values according to the official Socket.IO documentation. The Error event has a string. For events having no payload, the value is null.
      overload: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.On*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.Off(System.String,UnityAction{System.Object})
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.Off(System.String,UnityAction{System.Object})
      language: CSharp
      name:
        CSharp: Off(String, UnityAction<Object>)
        VB: Off(String, UnityAction(Of Object))
      nameWithType:
        CSharp: SocketIOClient.Off(String, UnityAction<Object>)
        VB: SocketIOClient.Off(String, UnityAction(Of Object))
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.Off(System.String, UnityAction<System.Object>)
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.Off(System.String, UnityAction(Of System.Object))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: Off
        path: ''
        startLine: 2020
      summary: "\nUnregisters a previously registered manager event callback\n"
      example: []
      syntax:
        content:
          CSharp: public void Off(string eventName, UnityAction<object> callback)
          VB: Public Sub Off(eventName As String, callback As UnityAction(Of Object))
        parameters:
        - id: eventName
          type: System.String
          description: The event name - For valid values see On(...)
        - id: callback
          type: Global.UnityAction{System.Object}
          description: The callback to unregister
      overload: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.Off*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent
    language: CSharp
    name:
      CSharp: SocketIOEvent
      VB: SocketIOEvent
    nameWithType:
      CSharp: SocketIOEvent
      VB: SocketIOEvent
    qualifiedName:
      CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent
      VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Firesplash.GameDevAssets.SocketIOPlus
    source:
      id: SocketIOEvent
      path: ''
      startLine: 2047
    syntax:
      content:
        CSharp: public class SocketIOEvent
        VB: Public Class SocketIOEvent
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.type
      commentId: P:Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.type
      language: CSharp
      name:
        CSharp: type
        VB: type
      nameWithType:
        CSharp: SocketIOEvent.type
        VB: SocketIOEvent.type
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.type
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.type
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: type
        path: ''
        startLine: 2049
      syntax:
        content:
          CSharp: public PacketType type { get; }
          VB: Public ReadOnly Property type As PacketType
        parameters: []
        return:
          type: Global.PacketType
      overload: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.type*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.Namespace
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.Namespace
      language: CSharp
      name:
        CSharp: Namespace
        VB: Namespace
      nameWithType:
        CSharp: SocketIOEvent.Namespace
        VB: SocketIOEvent.Namespace
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.Namespace
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.Namespace
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: Namespace
        path: ''
        startLine: 2055
      summary: "\nContians a reference to the SocketIONamespace this packet was received on.\nIt is null on Packets generated locally for sending.\n"
      example: []
      syntax:
        content:
          CSharp: public SocketIONamespace Namespace
          VB: Public Namespace As SocketIONamespace
        return:
          type: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.namespacePath
      commentId: P:Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.namespacePath
      language: CSharp
      name:
        CSharp: namespacePath
        VB: namespacePath
      nameWithType:
        CSharp: SocketIOEvent.namespacePath
        VB: SocketIOEvent.namespacePath
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.namespacePath
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.namespacePath
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: namespacePath
        path: ''
        startLine: 2056
      syntax:
        content:
          CSharp: public string namespacePath { get; }
          VB: Public ReadOnly Property namespacePath As String
        parameters: []
        return:
          type: System.String
      overload: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.namespacePath*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.acknowledgementID
      commentId: P:Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.acknowledgementID
      language: CSharp
      name:
        CSharp: acknowledgementID
        VB: acknowledgementID
      nameWithType:
        CSharp: SocketIOEvent.acknowledgementID
        VB: SocketIOEvent.acknowledgementID
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.acknowledgementID
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.acknowledgementID
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: acknowledgementID
        path: ''
        startLine: 2064
      syntax:
        content:
          CSharp: public int acknowledgementID { get; }
          VB: Public ReadOnly Property acknowledgementID As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.acknowledgementID*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.callback
      commentId: P:Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.callback
      language: CSharp
      name:
        CSharp: callback
        VB: callback
      nameWithType:
        CSharp: SocketIOEvent.callback
        VB: SocketIOEvent.callback
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.callback
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.callback
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: callback
        path: ''
        startLine: 2071
      summary: "\nIf this is an INCOMING acknowledgement, this action triggers sending the acknowledgement.\nInvoke it using callback.Invoke(payload) where the payload follows the same rules as for an emit.\nIf this Packet is not an incoming acknowledgement, the callback is null.\n"
      example: []
      syntax:
        content:
          CSharp: public Action<object[]> callback { get; }
          VB: Public ReadOnly Property callback As Action(Of Object())
        parameters: []
        return:
          type: System.Action{System.Object[]}
      overload: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.callback*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.payloads
      commentId: P:Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.payloads
      language: CSharp
      name:
        CSharp: payloads
        VB: payloads
      nameWithType:
        CSharp: SocketIOEvent.payloads
        VB: SocketIOEvent.payloads
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.payloads
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.payloads
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: payloads
        path: ''
        startLine: 2091
      summary: "\nThe payloads of this event.\nEvery payload is eighter a byte[] (for binary payloads) or a JToken - which can be a JValue, JObject or JArray\nIT is recommended to access the paloadsy using GetPayload(...)\n"
      example: []
      syntax:
        content:
          CSharp: public List<object> payloads { get; }
          VB: Public ReadOnly Property payloads As List(Of Object)
        parameters: []
        return:
          type: Global.List{System.Object}
      overload: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.payloads*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.GetPayload``1(System.Int32,System.Boolean)
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.GetPayload``1(System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: GetPayload<T>(Int32, Boolean)
        VB: GetPayload(Of T)(Int32, Boolean)
      nameWithType:
        CSharp: SocketIOEvent.GetPayload<T>(Int32, Boolean)
        VB: SocketIOEvent.GetPayload(Of T)(Int32, Boolean)
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.GetPayload<T>(System.Int32, System.Boolean)
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.GetPayload(Of T)(System.Int32, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: GetPayload
        path: ''
        startLine: 2106
      summary: "\nReturns the payload at a specific position.\nThe payload is checked and only returned, when it exists and the type is valid (castable).\nYou can decide the behaviour, if the actual payload does not match the type.\nThis method should work for most Object and Array types as well as binary (byte[]). It might not work for some enumerables. You can always directly access the payloads field.\n"
      example: []
      syntax:
        content:
          CSharp: public T GetPayload<T>(int position, bool throwOnError = true)
          VB: Public Function GetPayload(Of T)(position As Integer, throwOnError As Boolean = True) As T
        parameters:
        - id: position
          type: System.Int32
          description: The position of the payload (zero-based)
        - id: throwOnError
          type: System.Boolean
          description: If true or unset, an exception will be thrown if the payload does not exist or does not match the type. If false, the method returns the type&apos;s default and a warning is logged instead.
        typeParameters:
        - id: T
          description: The type of the payload
        return:
          type: '{T}'
          description: The payload casted into the requested type
      overload: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.GetPayload*
      exceptions:
      - type: System.IndexOutOfRangeException
        commentId: T:System.IndexOutOfRangeException
        description: Throws IndexOutOfRangeException if throwOnError is true and the event does not contain a payload at the specified position
      - type: System.InvalidCastException
        commentId: T:System.InvalidCastException
        description: Throws InvalidCastException if throwOnError is true and the requested payload is of an incompatible type
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        System.IndexOutOfRangeException: 
        System.InvalidCastException: 
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.eventName
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.eventName
      language: CSharp
      name:
        CSharp: eventName
        VB: eventName
      nameWithType:
        CSharp: SocketIOEvent.eventName
        VB: SocketIOEvent.eventName
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.eventName
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.eventName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: eventName
        path: ''
        startLine: 2165
      summary: "\nThe event name, this event was received under\n"
      example: []
      syntax:
        content:
          CSharp: public string eventName
          VB: Public eventName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.Length
      commentId: P:Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.Length
      language: CSharp
      name:
        CSharp: Length
        VB: Length
      nameWithType:
        CSharp: SocketIOEvent.Length
        VB: SocketIOEvent.Length
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.Length
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.Length
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: Length
        path: ''
        startLine: 2171
      summary: "\nReturns the number of payloads in this packet.\nOnly valid for messages.\n"
      example: []
      syntax:
        content:
          CSharp: public int Length { get; }
          VB: Public ReadOnly Property Length As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.Length*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace
    language: CSharp
    name:
      CSharp: SocketIONamespace
      VB: SocketIONamespace
    nameWithType:
      CSharp: SocketIONamespace
      VB: SocketIONamespace
    qualifiedName:
      CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace
      VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Firesplash.GameDevAssets.SocketIOPlus
    source:
      id: SocketIONamespace
      path: ''
      startLine: 2203
    summary: "\nThis class represents a (usually connected) Socket.IO namespace and implements the EventEmitter and the EventReceiver.\nWe try to keep our API as near to the official Socket.IO V4 API as possible within this class.\n<seealso cref=\"!:https://socket.io/docs/v4/emitting-events/\"></seealso>\n<seealso cref=\"!:https://socket.io/docs/v4/listening-to-events/#eventemitter-methods\"></seealso>\n"
    example: []
    syntax:
      content:
        CSharp: public class SocketIONamespace
        VB: Public Class SocketIONamespace
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.namespacePath
      commentId: P:Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.namespacePath
      language: CSharp
      name:
        CSharp: namespacePath
        VB: namespacePath
      nameWithType:
        CSharp: SocketIONamespace.namespacePath
        VB: SocketIONamespace.namespacePath
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.namespacePath
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.namespacePath
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: namespacePath
        path: ''
        startLine: 2205
      syntax:
        content:
          CSharp: public string namespacePath { get; }
          VB: Public ReadOnly Property namespacePath As String
        parameters: []
        return:
          type: System.String
      overload: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.namespacePath*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.socketID
      commentId: P:Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.socketID
      language: CSharp
      name:
        CSharp: socketID
        VB: socketID
      nameWithType:
        CSharp: SocketIONamespace.socketID
        VB: SocketIONamespace.socketID
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.socketID
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.socketID
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: socketID
        path: ''
        startLine: 2209
      syntax:
        content:
          CSharp: public string socketID { get; }
          VB: Public ReadOnly Property socketID As String
        parameters: []
        return:
          type: System.String
      overload: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.socketID*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.state
      commentId: P:Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.state
      language: CSharp
      name:
        CSharp: state
        VB: state
      nameWithType:
        CSharp: SocketIONamespace.state
        VB: SocketIONamespace.state
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.state
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.state
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: state
        path: ''
        startLine: 2210
      syntax:
        content:
          CSharp: public ConnectionState state { get; }
          VB: Public ReadOnly Property state As ConnectionState
        parameters: []
        return:
          type: Global.ConnectionState
      overload: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.state*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.OnSocketIOEventThreaded
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.OnSocketIOEventThreaded
      language: CSharp
      name:
        CSharp: OnSocketIOEventThreaded
        VB: OnSocketIOEventThreaded
      nameWithType:
        CSharp: SocketIONamespace.OnSocketIOEventThreaded
        VB: SocketIONamespace.OnSocketIOEventThreaded
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.OnSocketIOEventThreaded
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.OnSocketIOEventThreaded
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: OnSocketIOEventThreaded
        path: ''
        startLine: 2224
      summary: "\nThis event allows you to receive any Socket IO event (received or internally generated) without additional delay.\nThis callback is executed in a Thread so you may not directly access unity engine functions from it!\nWhen timing is not critical, you should use the &quot;On&quot; method instead to register a thread safe, dispatched callback.\n"
      example: []
      syntax:
        content:
          CSharp: public ThreadedSocketIOEvent OnSocketIOEventThreaded
          VB: Public OnSocketIOEventThreaded As ThreadedSocketIOEvent
        return:
          type: Global.ThreadedSocketIOEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Disconnect
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Disconnect
      language: CSharp
      name:
        CSharp: Disconnect()
        VB: Disconnect()
      nameWithType:
        CSharp: SocketIONamespace.Disconnect()
        VB: SocketIONamespace.Disconnect()
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Disconnect()
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Disconnect()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: Disconnect
        path: ''
        startLine: 2250
      syntax:
        content:
          CSharp: public void Disconnect()
          VB: Public Sub Disconnect
      overload: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Disconnect*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Emit(System.String,System.Object[],UnityAction{System.Object[]})
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Emit(System.String,System.Object[],UnityAction{System.Object[]})
      language: CSharp
      name:
        CSharp: Emit(String, Object[], UnityAction<Object[]>)
        VB: Emit(String, Object(), UnityAction(Of Object()))
      nameWithType:
        CSharp: SocketIONamespace.Emit(String, Object[], UnityAction<Object[]>)
        VB: SocketIONamespace.Emit(String, Object(), UnityAction(Of Object()))
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Emit(System.String, System.Object[], UnityAction<System.Object[]>)
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Emit(System.String, System.Object(), UnityAction(Of System.Object()))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: Emit
        path: ''
        startLine: 2393
      summary: "\nEmits an event to the server\n"
      example: []
      syntax:
        content:
          CSharp: public void Emit(string eventName, object[] payloads = null, UnityAction<object[]> acknowledgementCallback = null)
          VB: Public Sub Emit(eventName As String, payloads As Object() = Nothing, acknowledgementCallback As UnityAction(Of Object()) = Nothing)
        parameters:
        - id: eventName
          type: System.String
          description: The name of the emitted event
        - id: payloads
          type: System.Object[]
          description: An optional array of payload objects (Any objects supported by Json.Net OR byte[]). Every array element is transmitted as an individual payload. An array of three strings is the equivalent to JS io.emit(&quot;someEvent&quot;, &quot;string1&quot;, &quot;string2&quot;, &quot;string3&quot;)
        - id: acknowledgementCallback
          type: Global.UnityAction{System.Object[]}
          description: An optional callback. If provided, the emit will be an acknowledgement. This requires a payload.
      overload: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Emit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Emit``1(System.String,``0,UnityAction{System.Object[]})
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Emit``1(System.String,``0,UnityAction{System.Object[]})
      language: CSharp
      name:
        CSharp: Emit<T>(String, T, UnityAction<Object[]>)
        VB: Emit(Of T)(String, T, UnityAction(Of Object()))
      nameWithType:
        CSharp: SocketIONamespace.Emit<T>(String, T, UnityAction<Object[]>)
        VB: SocketIONamespace.Emit(Of T)(String, T, UnityAction(Of Object()))
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Emit<T>(System.String, T, UnityAction<System.Object[]>)
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Emit(Of T)(System.String, T, UnityAction(Of System.Object()))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: Emit
        path: ''
        startLine: 2424
      summary: "\nEmits an event to the server that has only one payload (for example a string, byte[] <strong>or a - through Json.Net - serializable object</strong>)\n"
      example: []
      syntax:
        content:
          CSharp: public void Emit<T>(string eventName, T payload, UnityAction<object[]> acknowledgementCallback = null)
          VB: Public Sub Emit(Of T)(eventName As String, payload As T, acknowledgementCallback As UnityAction(Of Object()) = Nothing)
        parameters:
        - id: eventName
          type: System.String
          description: The name of the emitted event
        - id: payload
          type: '{T}'
          description: The payload
        - id: acknowledgementCallback
          type: Global.UnityAction{System.Object[]}
          description: An optional callback. If provided, the emit will be an acknowledgement. This requires a payload. The callback received an object[] where every elemtn is eighter a byte[] or a JToken depending on what the server sent.
        typeParameters:
        - id: T
          description: The type of the primitive payload
      overload: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Emit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Once(System.String,UnityAction{Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent})
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Once(System.String,UnityAction{Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent})
      language: CSharp
      name:
        CSharp: Once(String, UnityAction<SocketIOEvent>)
        VB: Once(String, UnityAction(Of SocketIOEvent))
      nameWithType:
        CSharp: SocketIONamespace.Once(String, UnityAction<SocketIOEvent>)
        VB: SocketIONamespace.Once(String, UnityAction(Of SocketIOEvent))
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Once(System.String, UnityAction<Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent>)
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Once(System.String, UnityAction(Of Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: Once
        path: ''
        startLine: 2443
      summary: "\nRegisters a callback for a specific event which is only called once and then destroyed.\nThe callback is dispatched, so it will always call from the main thread and you can safely access Unity functions from it!\nOnce-Callbacks are called before registered permanent handlers\n"
      example: []
      syntax:
        content:
          CSharp: public void Once(string eventName, UnityAction<SocketIOEvent> callback)
          VB: Public Sub Once(eventName As String, callback As UnityAction(Of SocketIOEvent))
        parameters:
        - id: eventName
          type: System.String
          description: The EventName to subscribe to
        - id: callback
          type: Global.UnityAction{Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent}
          description: The Callback to invoke ONCE on receiption
      overload: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Once*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Once``1(System.String,UnityAction{``0})
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Once``1(System.String,UnityAction{``0})
      language: CSharp
      name:
        CSharp: Once<T>(String, UnityAction<T>)
        VB: Once(Of T)(String, UnityAction(Of T))
      nameWithType:
        CSharp: SocketIONamespace.Once<T>(String, UnityAction<T>)
        VB: SocketIONamespace.Once(Of T)(String, UnityAction(Of T))
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Once<T>(System.String, UnityAction<T>)
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Once(Of T)(System.String, UnityAction(Of T))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: Once
        path: ''
        startLine: 2468
      summary: "\nThis is a wrapper included for convenience in simple projects. It has some limitations.\nRegisters a callback for a specific event which only has ONE payload of a GIVEN TYPE.\nThis callback will only fire the first time, this event is received after registering the ccallback.\nIf the received event has more than one payload, the additional payloads will be ignored.\nIf the first payload is not of the correct type, the callback will not fire.\nIf the event is received and the payloads are not compatible, <strong>the callback is still removed from the list.</strong>\nFor any more advanced payload handling, use the &quot;Once&quot; method without type assignment.\nThe callback is dispatched, so it will always call from the main thread and you can safely access Unity functions from it!\n"
      example: []
      syntax:
        content:
          CSharp: public void Once<T>(string eventName, UnityAction<T> callback)
          VB: Public Sub Once(Of T)(eventName As String, callback As UnityAction(Of T))
        parameters:
        - id: eventName
          type: System.String
          description: The EventName to subscribe to
        - id: callback
          type: Global.UnityAction{{T}}
          description: The Callback to invoke on receiption
        typeParameters:
        - id: T
          description: The expected type of the first payload (JObject, JArray or a primitive type supported by JValue)
      overload: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Once*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.On(System.String,UnityAction{Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent})
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.On(System.String,UnityAction{Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent})
      language: CSharp
      name:
        CSharp: On(String, UnityAction<SocketIOEvent>)
        VB: On(String, UnityAction(Of SocketIOEvent))
      nameWithType:
        CSharp: SocketIONamespace.On(String, UnityAction<SocketIOEvent>)
        VB: SocketIONamespace.On(String, UnityAction(Of SocketIOEvent))
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.On(System.String, UnityAction<Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent>)
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.On(System.String, UnityAction(Of Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: On
        path: ''
        startLine: 2497
      summary: "\nRegisters a callback for a specific event.\nThe callback is dispatched, so it will always call from the main thread and you can safely access Unity functions from it!\n"
      example: []
      syntax:
        content:
          CSharp: public void On(string eventName, UnityAction<SocketIOEvent> callback)
          VB: Public Sub On(eventName As String, callback As UnityAction(Of SocketIOEvent))
        parameters:
        - id: eventName
          type: System.String
          description: The EventName to subscribe to
        - id: callback
          type: Global.UnityAction{Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent}
          description: The Callback to invoke on receiption
      overload: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.On*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.On(System.String,UnityAction)
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.On(System.String,UnityAction)
      language: CSharp
      name:
        CSharp: On(String, UnityAction)
        VB: On(String, UnityAction)
      nameWithType:
        CSharp: SocketIONamespace.On(String, UnityAction)
        VB: SocketIONamespace.On(String, UnityAction)
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.On(System.String, UnityAction)
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.On(System.String, UnityAction)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: On
        path: ''
        startLine: 2515
      summary: "\nRegisters a callback for a specific event that delivers NO payload. <strong>It will NOT invoke if a payload is contained in the received message!</strong>\nFor any more advanced payload handling, use the &quot;On&quot; method without type assignment.\n<strong>Warning:</strong> You can not unregister this listener using &quot;Off&quot;!\nThe callback is dispatched, so it will always call from the main thread and you can safely access Unity functions from it!\n"
      example: []
      syntax:
        content:
          CSharp: public void On(string eventName, UnityAction callback)
          VB: Public Sub On(eventName As String, callback As UnityAction)
        parameters:
        - id: eventName
          type: System.String
          description: The EventName to subscribe to
        - id: callback
          type: Global.UnityAction
          description: The Callback to invoke on receiption
      overload: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.On*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.On``1(System.String,UnityAction{``0})
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.On``1(System.String,UnityAction{``0})
      language: CSharp
      name:
        CSharp: On<T>(String, UnityAction<T>)
        VB: On(Of T)(String, UnityAction(Of T))
      nameWithType:
        CSharp: SocketIONamespace.On<T>(String, UnityAction<T>)
        VB: SocketIONamespace.On(Of T)(String, UnityAction(Of T))
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.On<T>(System.String, UnityAction<T>)
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.On(Of T)(System.String, UnityAction(Of T))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: On
        path: ''
        startLine: 2542
      summary: "\nThis is a wrapper included for convenience in simple projects. It has some limitations.\nRegisters a callback for a specific event which only has ONE payload of a GIVEN TYPE.\nIf the received event has more than one payload, the additional payloads will be ignored.\nIf the first payload is not of the correct type, the callback will not fire.\nFor any more advanced payload handling, use the &quot;On&quot; method without type assignment.\n<strong>Warning:</strong> You can not unregister this listener using &quot;Off&quot;!\nThe callback is dispatched, so it will always call from the main thread and you can safely access Unity functions from it!\n"
      example: []
      syntax:
        content:
          CSharp: public void On<T>(string eventName, UnityAction<T> callback)
          VB: Public Sub On(Of T)(eventName As String, callback As UnityAction(Of T))
        parameters:
        - id: eventName
          type: System.String
          description: The EventName to subscribe to
        - id: callback
          type: Global.UnityAction{{T}}
          description: The Callback to invoke on receiption
        typeParameters:
        - id: T
          description: The expected type of the first payload (JObject, JArray or a primitive type supported by JValue)
      overload: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.On*
      see:
      - linkId: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.On(System.String,UnityAction{Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent})
        commentId: M:Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.On(System.String,UnityAction{Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent})
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        ? Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.On(System.String,UnityAction{Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent})
        : 
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.OnAny(UnityAction{Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent})
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.OnAny(UnityAction{Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent})
      language: CSharp
      name:
        CSharp: OnAny(UnityAction<SocketIOEvent>)
        VB: OnAny(UnityAction(Of SocketIOEvent))
      nameWithType:
        CSharp: SocketIONamespace.OnAny(UnityAction<SocketIOEvent>)
        VB: SocketIONamespace.OnAny(UnityAction(Of SocketIOEvent))
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.OnAny(UnityAction<Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent>)
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.OnAny(UnityAction(Of Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: OnAny
        path: ''
        startLine: 2570
      summary: "\nRegisters a callback for ANY event (catch-all)\nThe callback is dispatched, so it will always call from the main thread and you can safely access Unity functions from it!\n"
      example: []
      syntax:
        content:
          CSharp: public void OnAny(UnityAction<SocketIOEvent> callback)
          VB: Public Sub OnAny(callback As UnityAction(Of SocketIOEvent))
        parameters:
        - id: callback
          type: Global.UnityAction{Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent}
          description: The Callback to invoke on receiption of any event
      overload: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.OnAny*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.OnAny``1(UnityAction{System.String,``0})
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.OnAny``1(UnityAction{System.String,``0})
      language: CSharp
      name:
        CSharp: OnAny<T>(UnityAction<String, T>)
        VB: OnAny(Of T)(UnityAction(Of String, T))
      nameWithType:
        CSharp: SocketIONamespace.OnAny<T>(UnityAction<String, T>)
        VB: SocketIONamespace.OnAny(Of T)(UnityAction(Of String, T))
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.OnAny<T>(UnityAction<System.String, T>)
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.OnAny(Of T)(UnityAction(Of System.String, T))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: OnAny
        path: ''
        startLine: 2588
      syntax:
        content:
          CSharp: public void OnAny<T>(UnityAction<string, T> callback)
          VB: Public Sub OnAny(Of T)(callback As UnityAction(Of String, T))
        parameters:
        - id: callback
          type: Global.UnityAction{System.String,{T}}
        typeParameters:
        - id: T
      overload: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.OnAny*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Off(System.String,UnityAction{Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent})
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Off(System.String,UnityAction{Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent})
      language: CSharp
      name:
        CSharp: Off(String, UnityAction<SocketIOEvent>)
        VB: Off(String, UnityAction(Of SocketIOEvent))
      nameWithType:
        CSharp: SocketIONamespace.Off(String, UnityAction<SocketIOEvent>)
        VB: SocketIONamespace.Off(String, UnityAction(Of SocketIOEvent))
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Off(System.String, UnityAction<Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent>)
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Off(System.String, UnityAction(Of Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: Off
        path: ''
        startLine: 2612
      summary: "\nUnregisters a callback for a specific event.\n"
      example: []
      syntax:
        content:
          CSharp: public bool Off(string eventName, UnityAction<SocketIOEvent> callback)
          VB: Public Function Off(eventName As String, callback As UnityAction(Of SocketIOEvent)) As Boolean
        parameters:
        - id: eventName
          type: System.String
          description: The name of the event
        - id: callback
          type: Global.UnityAction{Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent}
          description: The callback which should be removed
        return:
          type: System.Boolean
          description: True if the callback was removed, false otherwise
      overload: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Off*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.OffAny(UnityAction{Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent})
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.OffAny(UnityAction{Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent})
      language: CSharp
      name:
        CSharp: OffAny(UnityAction<SocketIOEvent>)
        VB: OffAny(UnityAction(Of SocketIOEvent))
      nameWithType:
        CSharp: SocketIONamespace.OffAny(UnityAction<SocketIOEvent>)
        VB: SocketIONamespace.OffAny(UnityAction(Of SocketIOEvent))
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.OffAny(UnityAction<Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent>)
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.OffAny(UnityAction(Of Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: OffAny
        path: ''
        startLine: 2630
      summary: "\nUnregisters a callback for the catch-all event.\n"
      example: []
      syntax:
        content:
          CSharp: public bool OffAny(UnityAction<SocketIOEvent> callback)
          VB: Public Function OffAny(callback As UnityAction(Of SocketIOEvent)) As Boolean
        parameters:
        - id: callback
          type: Global.UnityAction{Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent}
          description: The callback which should be removed
        return:
          type: System.Boolean
          description: True if the callback was removed, false otherwise
      overload: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.OffAny*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.OffAny
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.OffAny
      language: CSharp
      name:
        CSharp: OffAny()
        VB: OffAny()
      nameWithType:
        CSharp: SocketIONamespace.OffAny()
        VB: SocketIONamespace.OffAny()
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.OffAny()
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.OffAny()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: OffAny
        path: ''
        startLine: 2639
      summary: "\nUnregisters all callbacks for the catch-all event.\n"
      example: []
      syntax:
        content:
          CSharp: public void OffAny()
          VB: Public Sub OffAny
      overload: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.OffAny*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.RemoveAllListeners(System.String)
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.RemoveAllListeners(System.String)
      language: CSharp
      name:
        CSharp: RemoveAllListeners(String)
        VB: RemoveAllListeners(String)
      nameWithType:
        CSharp: SocketIONamespace.RemoveAllListeners(String)
        VB: SocketIONamespace.RemoveAllListeners(String)
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.RemoveAllListeners(System.String)
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.RemoveAllListeners(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: RemoveAllListeners
        path: ''
        startLine: 2648
      summary: "\nUnregisters all callbacks (once and permanent) for a specific event.\n"
      example: []
      syntax:
        content:
          CSharp: public void RemoveAllListeners(string eventName)
          VB: Public Sub RemoveAllListeners(eventName As String)
        parameters:
        - id: eventName
          type: System.String
          description: The name of the event
      overload: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.RemoveAllListeners*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.RemoveAllListeners
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.RemoveAllListeners
      language: CSharp
      name:
        CSharp: RemoveAllListeners()
        VB: RemoveAllListeners()
      nameWithType:
        CSharp: SocketIONamespace.RemoveAllListeners()
        VB: SocketIONamespace.RemoveAllListeners()
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.RemoveAllListeners()
        VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.RemoveAllListeners()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus
      source:
        id: RemoveAllListeners
        path: ''
        startLine: 2664
      summary: "\nUnregisters all callbacks (once and permanent) for all events - including catchall.\n"
      example: []
      syntax:
        content:
          CSharp: public void RemoveAllListeners()
          VB: Public Sub RemoveAllListeners
      overload: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.RemoveAllListeners*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOPacket
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.SocketIOPacket
    language: CSharp
    name:
      CSharp: SocketIOPacket
      VB: SocketIOPacket
    nameWithType:
      CSharp: SocketIOPacket
      VB: SocketIOPacket
    qualifiedName:
      CSharp: Firesplash.GameDevAssets.SocketIOPlus.SocketIOPacket
      VB: Firesplash.GameDevAssets.SocketIOPlus.SocketIOPacket
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Firesplash.GameDevAssets.SocketIOPlus
    source:
      id: SocketIOPacket
      path: ''
      startLine: 2683
    summary: "\nThis class represents a lowlevel SocketIO packet in its parsed state.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SocketIOPacket : SocketIOEvent'
        VB: >-
          Public Class SocketIOPacket

              Inherits SocketIOEvent
    inheritance:
    - System.Object
    - Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent
    inheritedMembers:
    - Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.type
    - Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.Namespace
    - Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.namespacePath
    - Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.acknowledgementID
    - Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.callback
    - Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.payloads
    - Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.GetPayload``1(System.Int32,System.Boolean)
    - Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.eventName
    - Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.Length
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
- id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
  commentId: N:Firesplash.GameDevAssets.SocketIOPlus.EngineIO
  language: CSharp
  name:
    CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
    VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
  nameWithType:
    CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
    VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
  qualifiedName:
    CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
    VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes
    language: CSharp
    name:
      CSharp: DataTypes
      VB: DataTypes
    nameWithType:
      CSharp: DataTypes
      VB: DataTypes
    qualifiedName:
      CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes
      VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
    source:
      id: DataTypes
      path: ''
      startLine: 199
    syntax:
      content:
        CSharp: public static class DataTypes
        VB: Public Module DataTypes
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items: []
  - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EIOPacketType
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EIOPacketType
    language: CSharp
    name:
      CSharp: DataTypes.EIOPacketType
      VB: DataTypes.EIOPacketType
    nameWithType:
      CSharp: DataTypes.EIOPacketType
      VB: DataTypes.EIOPacketType
    qualifiedName:
      CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EIOPacketType
      VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EIOPacketType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
    source:
      id: EIOPacketType
      path: ''
      startLine: 201
    syntax:
      content:
        CSharp: public enum EIOPacketType
        VB: Public Enum EIOPacketType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EIOPacketType.Open
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EIOPacketType.Open
      language: CSharp
      name:
        CSharp: Open
        VB: Open
      nameWithType:
        CSharp: DataTypes.EIOPacketType.Open
        VB: DataTypes.EIOPacketType.Open
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EIOPacketType.Open
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EIOPacketType.Open
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: Open
        path: ''
        startLine: 201
      syntax:
        content:
          CSharp: Open = 0
          VB: Open = 0
        return:
          type: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EIOPacketType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EIOPacketType.Close
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EIOPacketType.Close
      language: CSharp
      name:
        CSharp: Close
        VB: Close
      nameWithType:
        CSharp: DataTypes.EIOPacketType.Close
        VB: DataTypes.EIOPacketType.Close
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EIOPacketType.Close
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EIOPacketType.Close
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: Close
        path: ''
        startLine: 201
      syntax:
        content:
          CSharp: Close = 1
          VB: Close = 1
        return:
          type: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EIOPacketType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EIOPacketType.Ping
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EIOPacketType.Ping
      language: CSharp
      name:
        CSharp: Ping
        VB: Ping
      nameWithType:
        CSharp: DataTypes.EIOPacketType.Ping
        VB: DataTypes.EIOPacketType.Ping
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EIOPacketType.Ping
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EIOPacketType.Ping
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: Ping
        path: ''
        startLine: 201
      syntax:
        content:
          CSharp: Ping = 2
          VB: Ping = 2
        return:
          type: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EIOPacketType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EIOPacketType.Pong
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EIOPacketType.Pong
      language: CSharp
      name:
        CSharp: Pong
        VB: Pong
      nameWithType:
        CSharp: DataTypes.EIOPacketType.Pong
        VB: DataTypes.EIOPacketType.Pong
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EIOPacketType.Pong
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EIOPacketType.Pong
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: Pong
        path: ''
        startLine: 201
      syntax:
        content:
          CSharp: Pong = 3
          VB: Pong = 3
        return:
          type: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EIOPacketType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EIOPacketType.Message
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EIOPacketType.Message
      language: CSharp
      name:
        CSharp: Message
        VB: Message
      nameWithType:
        CSharp: DataTypes.EIOPacketType.Message
        VB: DataTypes.EIOPacketType.Message
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EIOPacketType.Message
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EIOPacketType.Message
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: Message
        path: ''
        startLine: 201
      syntax:
        content:
          CSharp: Message = 4
          VB: Message = 4
        return:
          type: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EIOPacketType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState
    language: CSharp
    name:
      CSharp: DataTypes.ConnectionState
      VB: DataTypes.ConnectionState
    nameWithType:
      CSharp: DataTypes.ConnectionState
      VB: DataTypes.ConnectionState
    qualifiedName:
      CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState
      VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
    source:
      id: ConnectionState
      path: ''
      startLine: 204
    syntax:
      content:
        CSharp: public enum ConnectionState
        VB: Public Enum ConnectionState
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState.None
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState.None
      language: CSharp
      name:
        CSharp: None
        VB: None
      nameWithType:
        CSharp: DataTypes.ConnectionState.None
        VB: DataTypes.ConnectionState.None
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState.None
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState.None
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: None
        path: ''
        startLine: 204
      syntax:
        content:
          CSharp: None = 0
          VB: None = 0
        return:
          type: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState.Connecting
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState.Connecting
      language: CSharp
      name:
        CSharp: Connecting
        VB: Connecting
      nameWithType:
        CSharp: DataTypes.ConnectionState.Connecting
        VB: DataTypes.ConnectionState.Connecting
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState.Connecting
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState.Connecting
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: Connecting
        path: ''
        startLine: 204
      syntax:
        content:
          CSharp: Connecting = 1
          VB: Connecting = 1
        return:
          type: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState.Open
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState.Open
      language: CSharp
      name:
        CSharp: Open
        VB: Open
      nameWithType:
        CSharp: DataTypes.ConnectionState.Open
        VB: DataTypes.ConnectionState.Open
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState.Open
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState.Open
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: Open
        path: ''
        startLine: 204
      syntax:
        content:
          CSharp: Open = 2
          VB: Open = 2
        return:
          type: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState.CloseSent
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState.CloseSent
      language: CSharp
      name:
        CSharp: CloseSent
        VB: CloseSent
      nameWithType:
        CSharp: DataTypes.ConnectionState.CloseSent
        VB: DataTypes.ConnectionState.CloseSent
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState.CloseSent
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState.CloseSent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: CloseSent
        path: ''
        startLine: 204
      syntax:
        content:
          CSharp: CloseSent = 3
          VB: CloseSent = 3
        return:
          type: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState.CloseReceived
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState.CloseReceived
      language: CSharp
      name:
        CSharp: CloseReceived
        VB: CloseReceived
      nameWithType:
        CSharp: DataTypes.ConnectionState.CloseReceived
        VB: DataTypes.ConnectionState.CloseReceived
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState.CloseReceived
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState.CloseReceived
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: CloseReceived
        path: ''
        startLine: 204
      syntax:
        content:
          CSharp: CloseReceived = 4
          VB: CloseReceived = 4
        return:
          type: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState.Closed
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState.Closed
      language: CSharp
      name:
        CSharp: Closed
        VB: Closed
      nameWithType:
        CSharp: DataTypes.ConnectionState.Closed
        VB: DataTypes.ConnectionState.Closed
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState.Closed
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState.Closed
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: Closed
        path: ''
        startLine: 204
      syntax:
        content:
          CSharp: Closed = 5
          VB: Closed = 5
        return:
          type: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState.Aborted
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState.Aborted
      language: CSharp
      name:
        CSharp: Aborted
        VB: Aborted
      nameWithType:
        CSharp: DataTypes.ConnectionState.Aborted
        VB: DataTypes.ConnectionState.Aborted
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState.Aborted
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState.Aborted
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: Aborted
        path: ''
        startLine: 204
      syntax:
        content:
          CSharp: Aborted = 6
          VB: Aborted = 6
        return:
          type: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState.Handshake
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState.Handshake
      language: CSharp
      name:
        CSharp: Handshake
        VB: Handshake
      nameWithType:
        CSharp: DataTypes.ConnectionState.Handshake
        VB: DataTypes.ConnectionState.Handshake
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState.Handshake
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState.Handshake
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: Handshake
        path: ''
        startLine: 204
      syntax:
        content:
          CSharp: Handshake = 255
          VB: Handshake = 255
        return:
          type: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIOMessageReceivedEvent
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIOMessageReceivedEvent
    language: CSharp
    name:
      CSharp: DataTypes.EngineIOMessageReceivedEvent
      VB: DataTypes.EngineIOMessageReceivedEvent
    nameWithType:
      CSharp: DataTypes.EngineIOMessageReceivedEvent
      VB: DataTypes.EngineIOMessageReceivedEvent
    qualifiedName:
      CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIOMessageReceivedEvent
      VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIOMessageReceivedEvent
    type: Delegate
    assemblies:
    - cs.temp.dll
    namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
    source:
      id: EngineIOMessageReceivedEvent
      path: ''
      startLine: 211
    summary: "\nThe event raised, when a message is received by the client\nThis event is fired from a thread. You may not access Unity Engine functions directly from the callback.\n"
    example: []
    syntax:
      content:
        CSharp: public delegate void EngineIOMessageReceivedEvent(EngineIOPacket packet);
        VB: Public Delegate Sub EngineIOMessageReceivedEvent(packet As EngineIOPacket)
      parameters:
      - id: packet
        type: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket
        description: The received packet
    modifiers:
      CSharp:
      - public
      - delegate
      VB:
      - Public
      - Delegate
    items: []
  - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIOConnectionReadyEvent
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIOConnectionReadyEvent
    language: CSharp
    name:
      CSharp: DataTypes.EngineIOConnectionReadyEvent
      VB: DataTypes.EngineIOConnectionReadyEvent
    nameWithType:
      CSharp: DataTypes.EngineIOConnectionReadyEvent
      VB: DataTypes.EngineIOConnectionReadyEvent
    qualifiedName:
      CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIOConnectionReadyEvent
      VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIOConnectionReadyEvent
    type: Delegate
    assemblies:
    - cs.temp.dll
    namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
    source:
      id: EngineIOConnectionReadyEvent
      path: ''
      startLine: 218
    summary: "\nThis event fires, when the connection is established and ready to be used\nThis event is fired from a thread. You may not access Unity Engine functions directly from the callback.\n"
    example: []
    syntax:
      content:
        CSharp: public delegate void EngineIOConnectionReadyEvent(DataTypes.ConnectionParameters connectionParams);
        VB: Public Delegate Sub EngineIOConnectionReadyEvent(connectionParams As DataTypes.ConnectionParameters)
      parameters:
      - id: connectionParams
        type: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionParameters
        description: ''
    modifiers:
      CSharp:
      - public
      - delegate
      VB:
      - Public
      - Delegate
    items: []
  - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIODisconnectEvent
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIODisconnectEvent
    language: CSharp
    name:
      CSharp: DataTypes.EngineIODisconnectEvent
      VB: DataTypes.EngineIODisconnectEvent
    nameWithType:
      CSharp: DataTypes.EngineIODisconnectEvent
      VB: DataTypes.EngineIODisconnectEvent
    qualifiedName:
      CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIODisconnectEvent
      VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIODisconnectEvent
    type: Delegate
    assemblies:
    - cs.temp.dll
    namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
    source:
      id: EngineIODisconnectEvent
      path: ''
      startLine: 225
    summary: "\nThis event fires when the connection gets disconnected\n"
    example: []
    syntax:
      content:
        CSharp: public delegate void EngineIODisconnectEvent(bool serverInitiated, string reason);
        VB: Public Delegate Sub EngineIODisconnectEvent(serverInitiated As Boolean, reason As String)
      parameters:
      - id: serverInitiated
        type: System.Boolean
        description: true, if the server intentionally disconnected us
      - id: reason
        type: System.String
        description: A textual reason
    modifiers:
      CSharp:
      - public
      - delegate
      VB:
      - Public
      - Delegate
    items: []
  - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIOConnectErrorEvent
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIOConnectErrorEvent
    language: CSharp
    name:
      CSharp: DataTypes.EngineIOConnectErrorEvent
      VB: DataTypes.EngineIOConnectErrorEvent
    nameWithType:
      CSharp: DataTypes.EngineIOConnectErrorEvent
      VB: DataTypes.EngineIOConnectErrorEvent
    qualifiedName:
      CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIOConnectErrorEvent
      VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIOConnectErrorEvent
    type: Delegate
    assemblies:
    - cs.temp.dll
    namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
    source:
      id: EngineIOConnectErrorEvent
      path: ''
      startLine: 231
    summary: "\nThis event fires when the connection throws an error\n"
    example: []
    syntax:
      content:
        CSharp: public delegate void EngineIOConnectErrorEvent(Exception e);
        VB: Public Delegate Sub EngineIOConnectErrorEvent(e As Exception)
      parameters:
      - id: e
        type: System.Exception
    modifiers:
      CSharp:
      - public
      - delegate
      VB:
      - Public
      - Delegate
    items: []
  - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionParameters
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionParameters
    language: CSharp
    name:
      CSharp: DataTypes.ConnectionParameters
      VB: DataTypes.ConnectionParameters
    nameWithType:
      CSharp: DataTypes.ConnectionParameters
      VB: DataTypes.ConnectionParameters
    qualifiedName:
      CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionParameters
      VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionParameters
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
    source:
      id: ConnectionParameters
      path: ''
      startLine: 233
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public struct ConnectionParameters
        VB: >-
          <Serializable>

          Public Structure ConnectionParameters
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionParameters.sid
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionParameters.sid
      language: CSharp
      name:
        CSharp: sid
        VB: sid
      nameWithType:
        CSharp: DataTypes.ConnectionParameters.sid
        VB: DataTypes.ConnectionParameters.sid
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionParameters.sid
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionParameters.sid
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: sid
        path: ''
        startLine: 236
      syntax:
        content:
          CSharp: public string sid
          VB: Public sid As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionParameters.pingInterval
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionParameters.pingInterval
      language: CSharp
      name:
        CSharp: pingInterval
        VB: pingInterval
      nameWithType:
        CSharp: DataTypes.ConnectionParameters.pingInterval
        VB: DataTypes.ConnectionParameters.pingInterval
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionParameters.pingInterval
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionParameters.pingInterval
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: pingInterval
        path: ''
        startLine: 237
      syntax:
        content:
          CSharp: public int pingInterval
          VB: Public pingInterval As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionParameters.pingTimeout
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionParameters.pingTimeout
      language: CSharp
      name:
        CSharp: pingTimeout
        VB: pingTimeout
      nameWithType:
        CSharp: DataTypes.ConnectionParameters.pingTimeout
        VB: DataTypes.ConnectionParameters.pingTimeout
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionParameters.pingTimeout
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionParameters.pingTimeout
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: pingTimeout
        path: ''
        startLine: 238
      syntax:
        content:
          CSharp: public int pingTimeout
          VB: Public pingTimeout As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient
    language: CSharp
    name:
      CSharp: EngineIOClient
      VB: EngineIOClient
    nameWithType:
      CSharp: EngineIOClient
      VB: EngineIOClient
    qualifiedName:
      CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient
      VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
    source:
      id: EngineIOClient
      path: ''
      startLine: 261
    summary: "\nThis component allows creating or accessing a &quot;low level&quot; EngineIO connection.\nIt is created as a subset of our Socket.IO implementation but if required, you can directly access it for example to create your own protocol on top of Engine.IO\nIt does not implement 100% of Engine.IO API but is enough for All-Day usage.\nThe implementation of BINARY Engine.IO messages is untested and provided without warranty. Feel free to report bugs to us though.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class EngineIOClient : MonoBehaviour'
        VB: >-
          Public Class EngineIOClient

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.serverAddress
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.serverAddress
      language: CSharp
      name:
        CSharp: serverAddress
        VB: serverAddress
      nameWithType:
        CSharp: EngineIOClient.serverAddress
        VB: EngineIOClient.serverAddress
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.serverAddress
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.serverAddress
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: serverAddress
        path: ''
        startLine: 265
      syntax:
        content:
          CSharp: public string serverAddress
          VB: Public serverAddress As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.State
      commentId: P:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.State
      language: CSharp
      name:
        CSharp: State
        VB: State
      nameWithType:
        CSharp: EngineIOClient.State
        VB: EngineIOClient.State
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.State
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.State
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: State
        path: ''
        startLine: 277
      summary: "\nReturns the connection state of the Engine.IO connection\n"
      example: []
      syntax:
        content:
          CSharp: public ConnectionState State { get; }
          VB: Public ReadOnly Property State As ConnectionState
        parameters: []
        return:
          type: Global.ConnectionState
      overload: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.State*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.OnEngineIOMessageReceived
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.OnEngineIOMessageReceived
      language: CSharp
      name:
        CSharp: OnEngineIOMessageReceived
        VB: OnEngineIOMessageReceived
      nameWithType:
        CSharp: EngineIOClient.OnEngineIOMessageReceived
        VB: EngineIOClient.OnEngineIOMessageReceived
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.OnEngineIOMessageReceived
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.OnEngineIOMessageReceived
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: OnEngineIOMessageReceived
        path: ''
        startLine: 292
      summary: "\nThis UnityEvent is fired on the main thread after an Engine.IO message packet has been received on the websocket. Due to dispatching, it can be slightly delayed.\n"
      example: []
      syntax:
        content:
          CSharp: public UnityEvent<EngineIOPacket> OnEngineIOMessageReceived
          VB: Public OnEngineIOMessageReceived As UnityEvent(Of EngineIOPacket)
        return:
          type: Global.UnityEvent{Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.OnEngineIOConnectionReady
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.OnEngineIOConnectionReady
      language: CSharp
      name:
        CSharp: OnEngineIOConnectionReady
        VB: OnEngineIOConnectionReady
      nameWithType:
        CSharp: EngineIOClient.OnEngineIOConnectionReady
        VB: EngineIOClient.OnEngineIOConnectionReady
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.OnEngineIOConnectionReady
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.OnEngineIOConnectionReady
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: OnEngineIOConnectionReady
        path: ''
        startLine: 295
      syntax:
        content:
          CSharp: public UnityEvent<ConnectionParameters> OnEngineIOConnectionReady
          VB: Public OnEngineIOConnectionReady As UnityEvent(Of ConnectionParameters)
        return:
          type: Global.UnityEvent{ConnectionParameters}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.OnEngineIODisconnect
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.OnEngineIODisconnect
      language: CSharp
      name:
        CSharp: OnEngineIODisconnect
        VB: OnEngineIODisconnect
      nameWithType:
        CSharp: EngineIOClient.OnEngineIODisconnect
        VB: EngineIOClient.OnEngineIODisconnect
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.OnEngineIODisconnect
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.OnEngineIODisconnect
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: OnEngineIODisconnect
        path: ''
        startLine: 298
      syntax:
        content:
          CSharp: public UnityEvent<bool, string> OnEngineIODisconnect
          VB: Public OnEngineIODisconnect As UnityEvent(Of Boolean, String)
        return:
          type: Global.UnityEvent{System.Boolean,System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.OnEngineIOError
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.OnEngineIOError
      language: CSharp
      name:
        CSharp: OnEngineIOError
        VB: OnEngineIOError
      nameWithType:
        CSharp: EngineIOClient.OnEngineIOError
        VB: EngineIOClient.OnEngineIOError
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.OnEngineIOError
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.OnEngineIOError
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: OnEngineIOError
        path: ''
        startLine: 301
      syntax:
        content:
          CSharp: public UnityEvent<Exception> OnEngineIOError
          VB: Public OnEngineIOError As UnityEvent(Of Exception)
        return:
          type: Global.UnityEvent{System.Exception}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.OnEngineIOMessageReceivedThreaded
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.OnEngineIOMessageReceivedThreaded
      language: CSharp
      name:
        CSharp: OnEngineIOMessageReceivedThreaded
        VB: OnEngineIOMessageReceivedThreaded
      nameWithType:
        CSharp: EngineIOClient.OnEngineIOMessageReceivedThreaded
        VB: EngineIOClient.OnEngineIOMessageReceivedThreaded
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.OnEngineIOMessageReceivedThreaded
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.OnEngineIOMessageReceivedThreaded
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: OnEngineIOMessageReceivedThreaded
        path: ''
        startLine: 310
      summary: "\nThis native C# callback is invoked immediately when an Engine.IO message packet is received on the websocket.\nWarning: If using Threaded and dispatched events, UnityEvents may be invoked out of order compared to only one kind of events. (You might receive Threaded Event 1, 2, 3 before actually receiving UnityEvent 2 for example)\n<strong>This callback is invoked from a thread!</strong>\n"
      example: []
      syntax:
        content:
          CSharp: public EngineIOMessageReceivedEvent OnEngineIOMessageReceivedThreaded
          VB: Public OnEngineIOMessageReceivedThreaded As EngineIOMessageReceivedEvent
        return:
          type: Global.EngineIOMessageReceivedEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.OnEngineIOConnectionReadyThreaded
      commentId: F:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.OnEngineIOConnectionReadyThreaded
      language: CSharp
      name:
        CSharp: OnEngineIOConnectionReadyThreaded
        VB: OnEngineIOConnectionReadyThreaded
      nameWithType:
        CSharp: EngineIOClient.OnEngineIOConnectionReadyThreaded
        VB: EngineIOClient.OnEngineIOConnectionReadyThreaded
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.OnEngineIOConnectionReadyThreaded
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.OnEngineIOConnectionReadyThreaded
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: OnEngineIOConnectionReadyThreaded
        path: ''
        startLine: 317
      summary: "\nThis native C# callback is invoked immediately when an Engine.IO connection has been established and the handshake is done.\nWarning: If using Threaded and dispatched events, UnityEvents may be invoked out of order compared to only one kind of events. (You might receive Threaded Event 1, 2, 3 before actually receiving UnityEvent 2 for example)\n<strong>This callback is invoked from a thread!</strong>\n"
      example: []
      syntax:
        content:
          CSharp: public EngineIOConnectionReadyEvent OnEngineIOConnectionReadyThreaded
          VB: Public OnEngineIOConnectionReadyThreaded As EngineIOConnectionReadyEvent
        return:
          type: Global.EngineIOConnectionReadyEvent
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.Awake
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: EngineIOClient.Awake()
        VB: EngineIOClient.Awake()
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.Awake()
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: Awake
        path: ''
        startLine: 319
      syntax:
        content:
          CSharp: public void Awake()
          VB: Public Sub Awake
      overload: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.Awake*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.LateUpdate
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.LateUpdate
      language: CSharp
      name:
        CSharp: LateUpdate()
        VB: LateUpdate()
      nameWithType:
        CSharp: EngineIOClient.LateUpdate()
        VB: EngineIOClient.LateUpdate()
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.LateUpdate()
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.LateUpdate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: LateUpdate
        path: ''
        startLine: 372
      syntax:
        content:
          CSharp: protected void LateUpdate()
          VB: Protected Sub LateUpdate
      overload: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.LateUpdate*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.Connect(System.String)
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.Connect(System.String)
      language: CSharp
      name:
        CSharp: Connect(String)
        VB: Connect(String)
      nameWithType:
        CSharp: EngineIOClient.Connect(String)
        VB: EngineIOClient.Connect(String)
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.Connect(System.String)
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.Connect(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: Connect
        path: ''
        startLine: 396
      summary: "\nConnect the client to the server\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Connect(string pServerAddress = null)
          VB: Public Overridable Sub Connect(pServerAddress As String = Nothing)
        parameters:
        - id: pServerAddress
          type: System.String
      overload: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.Connect*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.Disconnect
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.Disconnect
      language: CSharp
      name:
        CSharp: Disconnect()
        VB: Disconnect()
      nameWithType:
        CSharp: EngineIOClient.Disconnect()
        VB: EngineIOClient.Disconnect()
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.Disconnect()
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.Disconnect()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: Disconnect
        path: ''
        startLine: 405
      summary: "\nDisconnect the Engine.IO client\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Disconnect()
          VB: Public Overridable Sub Disconnect
      overload: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.Disconnect*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.SendEngineIOMessage(System.String)
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.SendEngineIOMessage(System.String)
      language: CSharp
      name:
        CSharp: SendEngineIOMessage(String)
        VB: SendEngineIOMessage(String)
      nameWithType:
        CSharp: EngineIOClient.SendEngineIOMessage(String)
        VB: EngineIOClient.SendEngineIOMessage(String)
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.SendEngineIOMessage(System.String)
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.SendEngineIOMessage(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: SendEngineIOMessage
        path: ''
        startLine: 414
      summary: "\nSends a string message to the server using raw Engine.IO protocol\n"
      example: []
      syntax:
        content:
          CSharp: public void SendEngineIOMessage(string message)
          VB: Public Sub SendEngineIOMessage(message As String)
        parameters:
        - id: message
          type: System.String
          description: The message
      overload: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.SendEngineIOMessage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.SendEngineIOMessage(System.Byte[])
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.SendEngineIOMessage(System.Byte[])
      language: CSharp
      name:
        CSharp: SendEngineIOMessage(Byte[])
        VB: SendEngineIOMessage(Byte())
      nameWithType:
        CSharp: EngineIOClient.SendEngineIOMessage(Byte[])
        VB: EngineIOClient.SendEngineIOMessage(Byte())
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.SendEngineIOMessage(System.Byte[])
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.SendEngineIOMessage(System.Byte())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: SendEngineIOMessage
        path: ''
        startLine: 423
      summary: "\nSends a binary message to the server using raw Engine.IO protocol\n"
      example: []
      syntax:
        content:
          CSharp: public void SendEngineIOMessage(byte[] message)
          VB: Public Sub SendEngineIOMessage(message As Byte())
        parameters:
        - id: message
          type: System.Byte[]
          description: The message
      overload: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.SendEngineIOMessage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.SendEngineIOPacket(Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket)
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.SendEngineIOPacket(Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket)
      language: CSharp
      name:
        CSharp: SendEngineIOPacket(EngineIOPacket)
        VB: SendEngineIOPacket(EngineIOPacket)
      nameWithType:
        CSharp: EngineIOClient.SendEngineIOPacket(EngineIOPacket)
        VB: EngineIOClient.SendEngineIOPacket(EngineIOPacket)
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.SendEngineIOPacket(Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket)
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.SendEngineIOPacket(Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: SendEngineIOPacket
        path: ''
        startLine: 432
      summary: "\nSends a previously built Engine.IO packet without modification\n"
      example: []
      syntax:
        content:
          CSharp: public void SendEngineIOPacket(EngineIOPacket packet)
          VB: Public Sub SendEngineIOPacket(packet As EngineIOPacket)
        parameters:
        - id: packet
          type: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket
          description: The packet
      overload: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.SendEngineIOPacket*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.SendEngineIOPackets(Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket[])
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.SendEngineIOPackets(Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket[])
      language: CSharp
      name:
        CSharp: SendEngineIOPackets(EngineIOPacket[])
        VB: SendEngineIOPackets(EngineIOPacket())
      nameWithType:
        CSharp: EngineIOClient.SendEngineIOPackets(EngineIOPacket[])
        VB: EngineIOClient.SendEngineIOPackets(EngineIOPacket())
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.SendEngineIOPackets(Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket[])
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.SendEngineIOPackets(Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: SendEngineIOPackets
        path: ''
        startLine: 441
      summary: "\nSends multiple previously built Engine.IO packets without modification in row\n"
      example: []
      syntax:
        content:
          CSharp: public void SendEngineIOPackets(EngineIOPacket[] packets)
          VB: Public Sub SendEngineIOPackets(packets As EngineIOPacket())
        parameters:
        - id: packets
          type: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket[]
          description: The packet array
      overload: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.SendEngineIOPackets*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket
    language: CSharp
    name:
      CSharp: EngineIOPacket
      VB: EngineIOPacket
    nameWithType:
      CSharp: EngineIOPacket
      VB: EngineIOPacket
    qualifiedName:
      CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket
      VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
    source:
      id: EngineIOPacket
      path: ''
      startLine: 457
    summary: "\nClass used to create a packet to be sent via WebSocket to a server using the Engine.IO protocol\n"
    example: []
    syntax:
      content:
        CSharp: public class EngineIOPacket
        VB: Public Class EngineIOPacket
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.#ctor(System.String)
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.#ctor(System.String)
      language: CSharp
      name:
        CSharp: EngineIOPacket(String)
        VB: EngineIOPacket(String)
      nameWithType:
        CSharp: EngineIOPacket.EngineIOPacket(String)
        VB: EngineIOPacket.EngineIOPacket(String)
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.EngineIOPacket(System.String)
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.EngineIOPacket(System.String)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: .ctor
        path: ''
        startLine: 487
      summary: "\nCreates a packet for a string-typed MESSAGE\nThis can not be used to parse an incoming message!\n"
      example: []
      syntax:
        content:
          CSharp: public EngineIOPacket(string messagePayload)
          VB: Public Sub New(messagePayload As String)
        parameters:
        - id: messagePayload
          type: System.String
      overload: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.#ctor(System.Byte[])
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.#ctor(System.Byte[])
      language: CSharp
      name:
        CSharp: EngineIOPacket(Byte[])
        VB: EngineIOPacket(Byte())
      nameWithType:
        CSharp: EngineIOPacket.EngineIOPacket(Byte[])
        VB: EngineIOPacket.EngineIOPacket(Byte())
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.EngineIOPacket(System.Byte[])
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.EngineIOPacket(System.Byte())
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: .ctor
        path: ''
        startLine: 498
      summary: "\nCreates a packet for a binary-typed MESSAGE\nThis can not be used to parse an incoming message!\n"
      example: []
      syntax:
        content:
          CSharp: public EngineIOPacket(byte[] messagePayload)
          VB: Public Sub New(messagePayload As Byte())
        parameters:
        - id: messagePayload
          type: System.Byte[]
      overload: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.Parse(System.Boolean,System.Byte[])
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.Parse(System.Boolean,System.Byte[])
      language: CSharp
      name:
        CSharp: Parse(Boolean, Byte[])
        VB: Parse(Boolean, Byte())
      nameWithType:
        CSharp: EngineIOPacket.Parse(Boolean, Byte[])
        VB: EngineIOPacket.Parse(Boolean, Byte())
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.Parse(System.Boolean, System.Byte[])
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.Parse(System.Boolean, System.Byte())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: Parse
        path: ''
        startLine: 510
      summary: "\nUsed to parse a received byte array from the transport into an Engine.IO packet\n"
      example: []
      syntax:
        content:
          CSharp: public static EngineIOPacket Parse(bool isBinaryMessage, byte[] webSocketMessageBytes)
          VB: Public Shared Function Parse(isBinaryMessage As Boolean, webSocketMessageBytes As Byte()) As EngineIOPacket
        parameters:
        - id: isBinaryMessage
          type: System.Boolean
          description: Set this true, if the message was received as binary message. Otherwise false.
        - id: webSocketMessageBytes
          type: System.Byte[]
          description: The received byte array
        return:
          type: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket
          description: The parsed package instance
      overload: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.Parse*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.IsBinaryMessage
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.IsBinaryMessage
      language: CSharp
      name:
        CSharp: IsBinaryMessage()
        VB: IsBinaryMessage()
      nameWithType:
        CSharp: EngineIOPacket.IsBinaryMessage()
        VB: EngineIOPacket.IsBinaryMessage()
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.IsBinaryMessage()
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.IsBinaryMessage()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: IsBinaryMessage
        path: ''
        startLine: 537
      syntax:
        content:
          CSharp: public bool IsBinaryMessage()
          VB: Public Function IsBinaryMessage As Boolean
        return:
          type: System.Boolean
      overload: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.IsBinaryMessage*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.GetPacketType
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.GetPacketType
      language: CSharp
      name:
        CSharp: GetPacketType()
        VB: GetPacketType()
      nameWithType:
        CSharp: EngineIOPacket.GetPacketType()
        VB: EngineIOPacket.GetPacketType()
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.GetPacketType()
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.GetPacketType()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: GetPacketType
        path: ''
        startLine: 542
      syntax:
        content:
          CSharp: public EIOPacketType GetPacketType()
          VB: Public Function GetPacketType As EIOPacketType
        return:
          type: Global.EIOPacketType
      overload: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.GetPacketType*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.GetPayloadBytes
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.GetPayloadBytes
      language: CSharp
      name:
        CSharp: GetPayloadBytes()
        VB: GetPayloadBytes()
      nameWithType:
        CSharp: EngineIOPacket.GetPayloadBytes()
        VB: EngineIOPacket.GetPayloadBytes()
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.GetPayloadBytes()
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.GetPayloadBytes()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: GetPayloadBytes
        path: ''
        startLine: 547
      syntax:
        content:
          CSharp: public byte[] GetPayloadBytes()
          VB: Public Function GetPayloadBytes As Byte()
        return:
          type: System.Byte[]
      overload: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.GetPayloadBytes*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.GetPayloadString
      commentId: M:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.GetPayloadString
      language: CSharp
      name:
        CSharp: GetPayloadString()
        VB: GetPayloadString()
      nameWithType:
        CSharp: EngineIOPacket.GetPayloadString()
        VB: EngineIOPacket.GetPayloadString()
      qualifiedName:
        CSharp: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.GetPayloadString()
        VB: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.GetPayloadString()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      source:
        id: GetPayloadString
        path: ''
        startLine: 553
      syntax:
        content:
          CSharp: public string GetPayloadString()
          VB: Public Function GetPayloadString As String
        return:
          type: System.String
      overload: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.GetPayloadString*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
references:
  Firesplash.GameDevAssets.SocketIOPlus:
    name:
      CSharp:
      - name: Firesplash.GameDevAssets.SocketIOPlus
        nameWithType: Firesplash.GameDevAssets.SocketIOPlus
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus
      VB:
      - name: Firesplash.GameDevAssets.SocketIOPlus
        nameWithType: Firesplash.GameDevAssets.SocketIOPlus
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus
    isDefinition: true
    commentId: N:Firesplash.GameDevAssets.SocketIOPlus
  Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient
        name: SocketIOClient
        nameWithType: SocketIOClient
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient
        name: SocketIOClient
        nameWithType: SocketIOClient
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient
    isDefinition: true
    parent: Firesplash.GameDevAssets.SocketIOPlus
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient
  Global.Text:
    name:
      CSharp:
      - id: Global.Text
        name: Text
        nameWithType: Text
        qualifiedName: Text
        isExternal: true
      VB:
      - id: Global.Text
        name: Text
        nameWithType: Text
        qualifiedName: Text
        isExternal: true
    isDefinition: true
  Global.ExampleScript:
    name:
      CSharp:
      - id: Global.ExampleScript
        name: ExampleScript
        nameWithType: ExampleScript
        qualifiedName: ExampleScript
      VB:
      - id: Global.ExampleScript
        name: ExampleScript
        nameWithType: ExampleScript
        qualifiedName: ExampleScript
    isDefinition: true
    commentId: T:Global.ExampleScript
  Global:
    name:
      CSharp:
      - name: Global
        nameWithType: Global
        qualifiedName: Global
      VB:
      - name: ''
        nameWithType: ''
        qualifiedName: ''
    isDefinition: true
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  Firesplash.GameDevAssets.SocketIOPlus.DataTypes:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.DataTypes
        name: DataTypes
        nameWithType: DataTypes
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.DataTypes
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.DataTypes
        name: DataTypes
        nameWithType: DataTypes
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.DataTypes
    isDefinition: true
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.DataTypes
  Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ConnectionState:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ConnectionState
        name: DataTypes.ConnectionState
        nameWithType: DataTypes.ConnectionState
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ConnectionState
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ConnectionState
        name: DataTypes.ConnectionState
        nameWithType: DataTypes.ConnectionState
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ConnectionState
    isDefinition: true
    parent: Firesplash.GameDevAssets.SocketIOPlus
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ConnectionState
  Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType
        name: DataTypes.PacketType
        nameWithType: DataTypes.PacketType
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType
        name: DataTypes.PacketType
        nameWithType: DataTypes.PacketType
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType
    isDefinition: true
    parent: Firesplash.GameDevAssets.SocketIOPlus
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.DataTypes.PacketType
  System.Exception:
    name:
      CSharp:
      - id: System.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: System.Exception
        isExternal: true
      VB:
      - id: System.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: System.Exception
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Exception
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOException.#ctor*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOException.#ctor*
        name: SocketIOException
        nameWithType: DataTypes.SocketIOException.SocketIOException
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOException.SocketIOException
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOException.#ctor*
        name: SocketIOException
        nameWithType: DataTypes.SocketIOException.SocketIOException
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOException.SocketIOException
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOException.#ctor
  Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOException:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOException
        name: DataTypes.SocketIOException
        nameWithType: DataTypes.SocketIOException
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOException
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOException
        name: DataTypes.SocketIOException
        nameWithType: DataTypes.SocketIOException
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOException
    isDefinition: true
    parent: Firesplash.GameDevAssets.SocketIOPlus
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOException
  Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOProtocolViolationException.#ctor*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOProtocolViolationException.#ctor*
        name: SocketIOProtocolViolationException
        nameWithType: DataTypes.SocketIOProtocolViolationException.SocketIOProtocolViolationException
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOProtocolViolationException.SocketIOProtocolViolationException
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOProtocolViolationException.#ctor*
        name: SocketIOProtocolViolationException
        nameWithType: DataTypes.SocketIOProtocolViolationException.SocketIOProtocolViolationException
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOProtocolViolationException.SocketIOProtocolViolationException
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOProtocolViolationException.#ctor
  Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOProtocolViolationException:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOProtocolViolationException
        name: DataTypes.SocketIOProtocolViolationException
        nameWithType: DataTypes.SocketIOProtocolViolationException
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOProtocolViolationException
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOProtocolViolationException
        name: DataTypes.SocketIOProtocolViolationException
        nameWithType: DataTypes.SocketIOProtocolViolationException
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOProtocolViolationException
    isDefinition: true
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOProtocolViolationException
  Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOAuthPayloadCallback:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOAuthPayloadCallback
        name: DataTypes.SocketIOAuthPayloadCallback
        nameWithType: DataTypes.SocketIOAuthPayloadCallback
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOAuthPayloadCallback
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOAuthPayloadCallback
        name: DataTypes.SocketIOAuthPayloadCallback
        nameWithType: DataTypes.SocketIOAuthPayloadCallback
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOAuthPayloadCallback
    isDefinition: true
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.DataTypes.SocketIOAuthPayloadCallback
  Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent
        name: SocketIOEvent
        nameWithType: SocketIOEvent
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent
        name: SocketIOEvent
        nameWithType: SocketIOEvent
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent
    isDefinition: true
    parent: Firesplash.GameDevAssets.SocketIOPlus
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent
  Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ThreadedSocketIOEvent:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ThreadedSocketIOEvent
        name: DataTypes.ThreadedSocketIOEvent
        nameWithType: DataTypes.ThreadedSocketIOEvent
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ThreadedSocketIOEvent
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ThreadedSocketIOEvent
        name: DataTypes.ThreadedSocketIOEvent
        nameWithType: DataTypes.ThreadedSocketIOEvent
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ThreadedSocketIOEvent
    isDefinition: true
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.DataTypes.ThreadedSocketIOEvent
  Firesplash.GameDevAssets.SocketIOPlus.Parser:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.Parser
        name: Parser
        nameWithType: Parser
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.Parser
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.Parser
        name: Parser
        nameWithType: Parser
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.Parser
    isDefinition: true
    parent: Firesplash.GameDevAssets.SocketIOPlus
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.Parser
  Firesplash.GameDevAssets.SocketIOPlus.SocketIOPacket:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOPacket
        name: SocketIOPacket
        nameWithType: SocketIOPacket
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOPacket
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOPacket
        name: SocketIOPacket
        nameWithType: SocketIOPacket
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOPacket
    isDefinition: true
    parent: Firesplash.GameDevAssets.SocketIOPlus
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.SocketIOPacket
  Global.EngineIOPacket:
    name:
      CSharp:
      - id: Global.EngineIOPacket
        name: EngineIOPacket
        nameWithType: EngineIOPacket
        qualifiedName: EngineIOPacket
        isExternal: true
      VB:
      - id: Global.EngineIOPacket
        name: EngineIOPacket
        nameWithType: EngineIOPacket
        qualifiedName: EngineIOPacket
        isExternal: true
    isDefinition: true
  Firesplash.GameDevAssets.SocketIOPlus.Parser.Parse(EngineIOPacket,Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient):
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.Parser.Parse(EngineIOPacket,Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient)
        name: Parse
        nameWithType: Parser.Parse
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.Parser.Parse
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.EngineIOPacket
        name: EngineIOPacket
        nameWithType: EngineIOPacket
        qualifiedName: EngineIOPacket
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient
        name: SocketIOClient
        nameWithType: SocketIOClient
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.Parser.Parse(EngineIOPacket,Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient)
        name: Parse
        nameWithType: Parser.Parse
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.Parser.Parse
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Global.EngineIOPacket
        name: EngineIOPacket
        nameWithType: EngineIOPacket
        qualifiedName: EngineIOPacket
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient
        name: SocketIOClient
        nameWithType: SocketIOClient
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Firesplash.GameDevAssets.SocketIOPlus.Parser
    commentId: M:Firesplash.GameDevAssets.SocketIOPlus.Parser.Parse(EngineIOPacket,Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient)
  Firesplash.GameDevAssets.SocketIOPlus.DefaultParser.Parse*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.DefaultParser.Parse*
        name: Parse
        nameWithType: DefaultParser.Parse
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.DefaultParser.Parse
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.DefaultParser.Parse*
        name: Parse
        nameWithType: DefaultParser.Parse
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.DefaultParser.Parse
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.DefaultParser.Parse
  Firesplash.GameDevAssets.SocketIOPlus.DefaultParser:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.DefaultParser
        name: DefaultParser
        nameWithType: DefaultParser
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.DefaultParser
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.DefaultParser
        name: DefaultParser
        nameWithType: DefaultParser
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.DefaultParser
    isDefinition: true
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.DefaultParser
  Firesplash.GameDevAssets.SocketIOPlus.Parser.Parse*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.Parser.Parse*
        name: Parse
        nameWithType: Parser.Parse
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.Parser.Parse
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.Parser.Parse*
        name: Parse
        nameWithType: Parser.Parse
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.Parser.Parse
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.Parser.Parse
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.DefaultNamespace:
    commentId: P:Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.DefaultNamespace
  Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace
        name: SocketIONamespace
        nameWithType: SocketIONamespace
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace
        name: SocketIONamespace
        nameWithType: SocketIONamespace
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace
    isDefinition: true
    parent: Firesplash.GameDevAssets.SocketIOPlus
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace
  Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.D*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.D*
        name: D
        nameWithType: SocketIOClient.D
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.D
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.D*
        name: D
        nameWithType: SocketIOClient.D
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.D
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.D
  Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.DefaultNamespace*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.DefaultNamespace*
        name: DefaultNamespace
        nameWithType: SocketIOClient.DefaultNamespace
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.DefaultNamespace
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.DefaultNamespace*
        name: DefaultNamespace
        nameWithType: SocketIOClient.DefaultNamespace
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.DefaultNamespace
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.DefaultNamespace
  Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.GetNamespace*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.GetNamespace*
        name: GetNamespace
        nameWithType: SocketIOClient.GetNamespace
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.GetNamespace
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.GetNamespace*
        name: GetNamespace
        nameWithType: SocketIOClient.GetNamespace
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.GetNamespace
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.GetNamespace
  Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.LateUpdate*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.LateUpdate*
        name: LateUpdate
        nameWithType: SocketIOClient.LateUpdate
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.LateUpdate
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.LateUpdate*
        name: LateUpdate
        nameWithType: SocketIOClient.LateUpdate
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.LateUpdate
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.LateUpdate
  Global.SocketIOAuthPayloadCallback:
    name:
      CSharp:
      - id: Global.SocketIOAuthPayloadCallback
        name: SocketIOAuthPayloadCallback
        nameWithType: SocketIOAuthPayloadCallback
        qualifiedName: SocketIOAuthPayloadCallback
        isExternal: true
      VB:
      - id: Global.SocketIOAuthPayloadCallback
        name: SocketIOAuthPayloadCallback
        nameWithType: SocketIOAuthPayloadCallback
        qualifiedName: SocketIOAuthPayloadCallback
        isExternal: true
    isDefinition: true
    commentId: '!:Global.SocketIOAuthPayloadCallback'
  Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.SetAuthPayloadCallback*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.SetAuthPayloadCallback*
        name: SetAuthPayloadCallback
        nameWithType: SocketIOClient.SetAuthPayloadCallback
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.SetAuthPayloadCallback
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.SetAuthPayloadCallback*
        name: SetAuthPayloadCallback
        nameWithType: SocketIOClient.SetAuthPayloadCallback
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.SetAuthPayloadCallback
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.SetAuthPayloadCallback
  Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.Connect*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.Connect*
        name: Connect
        nameWithType: SocketIOClient.Connect
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.Connect
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.Connect*
        name: Connect
        nameWithType: SocketIOClient.Connect
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.Connect
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.Connect
  Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.Disconnect*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.Disconnect*
        name: Disconnect
        nameWithType: SocketIOClient.Disconnect
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.Disconnect
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.Disconnect*
        name: Disconnect
        nameWithType: SocketIOClient.Disconnect
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.Disconnect
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.Disconnect
  Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.GetParser*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.GetParser*
        name: GetParser
        nameWithType: SocketIOClient.GetParser
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.GetParser
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.GetParser*
        name: GetParser
        nameWithType: SocketIOClient.GetParser
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.GetParser
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.GetParser
  Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.SetParser*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.SetParser*
        name: SetParser
        nameWithType: SocketIOClient.SetParser
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.SetParser
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.SetParser*
        name: SetParser
        nameWithType: SocketIOClient.SetParser
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.SetParser
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.SetParser
  Global.UnityAction`1:
    name:
      CSharp:
      - id: Global.UnityAction`1
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityAction`1
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  Global.UnityAction{System.Object}:
    name:
      CSharp:
      - id: Global.UnityAction`1
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityAction`1
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.UnityAction`1
    commentId: '!:Global.UnityAction{System.Object}'
  Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.On*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.On*
        name: On
        nameWithType: SocketIOClient.On
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.On
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.On*
        name: On
        nameWithType: SocketIOClient.On
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.On
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.On
  Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.Off*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.Off*
        name: Off
        nameWithType: SocketIOClient.Off
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.Off
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.Off*
        name: Off
        nameWithType: SocketIOClient.Off
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.Off
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.SocketIOClient.Off
  Global.PacketType:
    name:
      CSharp:
      - id: Global.PacketType
        name: PacketType
        nameWithType: PacketType
        qualifiedName: PacketType
        isExternal: true
      VB:
      - id: Global.PacketType
        name: PacketType
        nameWithType: PacketType
        qualifiedName: PacketType
        isExternal: true
    isDefinition: true
    commentId: '!:Global.PacketType'
  Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.type*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.type*
        name: type
        nameWithType: SocketIOEvent.type
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.type
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.type*
        name: type
        nameWithType: SocketIOEvent.type
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.type
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.type
  Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.namespacePath*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.namespacePath*
        name: namespacePath
        nameWithType: SocketIOEvent.namespacePath
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.namespacePath
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.namespacePath*
        name: namespacePath
        nameWithType: SocketIOEvent.namespacePath
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.namespacePath
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.namespacePath
  Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.acknowledgementID*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.acknowledgementID*
        name: acknowledgementID
        nameWithType: SocketIOEvent.acknowledgementID
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.acknowledgementID
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.acknowledgementID*
        name: acknowledgementID
        nameWithType: SocketIOEvent.acknowledgementID
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.acknowledgementID
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.acknowledgementID
  System.Action`1:
    name:
      CSharp:
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Action`1
  System.Action{System.Object[]}:
    name:
      CSharp:
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Action`1
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Action`1
    parent: System
    commentId: T:System.Action{System.Object[]}
  Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.callback*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.callback*
        name: callback
        nameWithType: SocketIOEvent.callback
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.callback
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.callback*
        name: callback
        nameWithType: SocketIOEvent.callback
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.callback
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.callback
  Global.List`1:
    name:
      CSharp:
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:Global.List`1'
  Global.List{System.Object}:
    name:
      CSharp:
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.List`1
    commentId: '!:Global.List{System.Object}'
  Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.payloads*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.payloads*
        name: payloads
        nameWithType: SocketIOEvent.payloads
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.payloads
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.payloads*
        name: payloads
        nameWithType: SocketIOEvent.payloads
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.payloads
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.payloads
  System.IndexOutOfRangeException:
    commentId: T:System.IndexOutOfRangeException
  System.InvalidCastException:
    commentId: T:System.InvalidCastException
  T:
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: true
  '{T}':
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: false
    definition: T
    commentId: '!:T'
  Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.GetPayload*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.GetPayload*
        name: GetPayload
        nameWithType: SocketIOEvent.GetPayload
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.GetPayload
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.GetPayload*
        name: GetPayload
        nameWithType: SocketIOEvent.GetPayload
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.GetPayload
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.GetPayload
  Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.Length*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.Length*
        name: Length
        nameWithType: SocketIOEvent.Length
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.Length
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.Length*
        name: Length
        nameWithType: SocketIOEvent.Length
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.Length
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.Length
  Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.namespacePath*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.namespacePath*
        name: namespacePath
        nameWithType: SocketIONamespace.namespacePath
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.namespacePath
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.namespacePath*
        name: namespacePath
        nameWithType: SocketIONamespace.namespacePath
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.namespacePath
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.namespacePath
  Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.socketID*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.socketID*
        name: socketID
        nameWithType: SocketIONamespace.socketID
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.socketID
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.socketID*
        name: socketID
        nameWithType: SocketIONamespace.socketID
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.socketID
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.socketID
  Global.ConnectionState:
    name:
      CSharp:
      - id: Global.ConnectionState
        name: ConnectionState
        nameWithType: ConnectionState
        qualifiedName: ConnectionState
        isExternal: true
      VB:
      - id: Global.ConnectionState
        name: ConnectionState
        nameWithType: ConnectionState
        qualifiedName: ConnectionState
        isExternal: true
    isDefinition: true
  Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.state*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.state*
        name: state
        nameWithType: SocketIONamespace.state
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.state
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.state*
        name: state
        nameWithType: SocketIONamespace.state
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.state
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.state
  Global.ThreadedSocketIOEvent:
    name:
      CSharp:
      - id: Global.ThreadedSocketIOEvent
        name: ThreadedSocketIOEvent
        nameWithType: ThreadedSocketIOEvent
        qualifiedName: ThreadedSocketIOEvent
        isExternal: true
      VB:
      - id: Global.ThreadedSocketIOEvent
        name: ThreadedSocketIOEvent
        nameWithType: ThreadedSocketIOEvent
        qualifiedName: ThreadedSocketIOEvent
        isExternal: true
    isDefinition: true
    commentId: '!:Global.ThreadedSocketIOEvent'
  Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Disconnect*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Disconnect*
        name: Disconnect
        nameWithType: SocketIONamespace.Disconnect
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Disconnect
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Disconnect*
        name: Disconnect
        nameWithType: SocketIONamespace.Disconnect
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Disconnect
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Disconnect
  System.Object[]:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Global.UnityAction{System.Object[]}:
    name:
      CSharp:
      - id: Global.UnityAction`1
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityAction`1
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.UnityAction`1
    commentId: '!:Global.UnityAction{System.Object[]}'
  Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Emit*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Emit*
        name: Emit
        nameWithType: SocketIONamespace.Emit
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Emit
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Emit*
        name: Emit
        nameWithType: SocketIONamespace.Emit
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Emit
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Emit
  Global.UnityAction{Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent}:
    name:
      CSharp:
      - id: Global.UnityAction`1
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent
        name: SocketIOEvent
        nameWithType: SocketIOEvent
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityAction`1
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent
        name: SocketIOEvent
        nameWithType: SocketIOEvent
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.UnityAction`1
    commentId: '!:Global.UnityAction{Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent}'
  Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Once*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Once*
        name: Once
        nameWithType: SocketIONamespace.Once
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Once
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Once*
        name: Once
        nameWithType: SocketIONamespace.Once
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Once
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Once
  Global.UnityAction{{T}}:
    name:
      CSharp:
      - id: Global.UnityAction`1
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityAction`1
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.UnityAction`1
    commentId: '!:Global.UnityAction{``0}'
  Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.On*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.On*
        name: On
        nameWithType: SocketIONamespace.On
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.On
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.On*
        name: On
        nameWithType: SocketIONamespace.On
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.On
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.On
  Global.UnityAction:
    name:
      CSharp:
      - id: Global.UnityAction
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      VB:
      - id: Global.UnityAction
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
    isDefinition: true
    commentId: '!:Global.UnityAction'
  ? Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.On(System.String,UnityAction{Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent})
  : commentId: M:Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.On(System.String,UnityAction{Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent})
  Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.OnAny*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.OnAny*
        name: OnAny
        nameWithType: SocketIONamespace.OnAny
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.OnAny
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.OnAny*
        name: OnAny
        nameWithType: SocketIONamespace.OnAny
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.OnAny
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.OnAny
  Global.UnityAction`2:
    name:
      CSharp:
      - id: Global.UnityAction`2
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityAction`2
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:Global.UnityAction`2'
  Global.UnityAction{System.String,{T}}:
    name:
      CSharp:
      - id: Global.UnityAction`2
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityAction`2
        name: UnityAction
        nameWithType: UnityAction
        qualifiedName: UnityAction
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.UnityAction`2
    commentId: '!:Global.UnityAction{System.String,``0}'
  Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Off*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Off*
        name: Off
        nameWithType: SocketIONamespace.Off
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Off
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Off*
        name: Off
        nameWithType: SocketIONamespace.Off
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Off
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.Off
  Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.OffAny*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.OffAny*
        name: OffAny
        nameWithType: SocketIONamespace.OffAny
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.OffAny
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.OffAny*
        name: OffAny
        nameWithType: SocketIONamespace.OffAny
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.OffAny
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.OffAny
  Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.RemoveAllListeners*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.RemoveAllListeners*
        name: RemoveAllListeners
        nameWithType: SocketIONamespace.RemoveAllListeners
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.RemoveAllListeners
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.RemoveAllListeners*
        name: RemoveAllListeners
        nameWithType: SocketIONamespace.RemoveAllListeners
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.RemoveAllListeners
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.SocketIONamespace.RemoveAllListeners
  Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.type:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.type
        name: type
        nameWithType: SocketIOEvent.type
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.type
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.type
        name: type
        nameWithType: SocketIOEvent.type
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.type
    isDefinition: true
    parent: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent
    commentId: P:Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.type
  Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.Namespace:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.Namespace
        name: Namespace
        nameWithType: SocketIOEvent.Namespace
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.Namespace
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.Namespace
        name: Namespace
        nameWithType: SocketIOEvent.Namespace
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.Namespace
    isDefinition: true
    parent: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent
    commentId: F:Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.Namespace
  Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.namespacePath:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.namespacePath
        name: namespacePath
        nameWithType: SocketIOEvent.namespacePath
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.namespacePath
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.namespacePath
        name: namespacePath
        nameWithType: SocketIOEvent.namespacePath
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.namespacePath
    isDefinition: true
    parent: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent
    commentId: P:Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.namespacePath
  Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.acknowledgementID:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.acknowledgementID
        name: acknowledgementID
        nameWithType: SocketIOEvent.acknowledgementID
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.acknowledgementID
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.acknowledgementID
        name: acknowledgementID
        nameWithType: SocketIOEvent.acknowledgementID
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.acknowledgementID
    isDefinition: true
    parent: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent
    commentId: P:Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.acknowledgementID
  Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.callback:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.callback
        name: callback
        nameWithType: SocketIOEvent.callback
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.callback
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.callback
        name: callback
        nameWithType: SocketIOEvent.callback
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.callback
    isDefinition: true
    parent: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent
    commentId: P:Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.callback
  Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.payloads:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.payloads
        name: payloads
        nameWithType: SocketIOEvent.payloads
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.payloads
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.payloads
        name: payloads
        nameWithType: SocketIOEvent.payloads
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.payloads
    isDefinition: true
    parent: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent
    commentId: P:Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.payloads
  Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.GetPayload``1(System.Int32,System.Boolean):
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.GetPayload``1(System.Int32,System.Boolean)
        name: GetPayload<T>
        nameWithType: SocketIOEvent.GetPayload<T>
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.GetPayload<T>
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.GetPayload``1(System.Int32,System.Boolean)
        name: GetPayload(Of T)
        nameWithType: SocketIOEvent.GetPayload(Of T)
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.GetPayload(Of T)
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent
    commentId: M:Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.GetPayload``1(System.Int32,System.Boolean)
  Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.eventName:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.eventName
        name: eventName
        nameWithType: SocketIOEvent.eventName
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.eventName
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.eventName
        name: eventName
        nameWithType: SocketIOEvent.eventName
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.eventName
    isDefinition: true
    parent: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent
    commentId: F:Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.eventName
  Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.Length:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.Length
        name: Length
        nameWithType: SocketIOEvent.Length
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.Length
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.Length
        name: Length
        nameWithType: SocketIOEvent.Length
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.Length
    isDefinition: true
    parent: Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent
    commentId: P:Firesplash.GameDevAssets.SocketIOPlus.SocketIOEvent.Length
  Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes
        name: DataTypes
        nameWithType: DataTypes
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes
        name: DataTypes
        nameWithType: DataTypes
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes
    isDefinition: true
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes
  Firesplash.GameDevAssets.SocketIOPlus.EngineIO:
    name:
      CSharp:
      - name: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
        nameWithType: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
      VB:
      - name: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
        nameWithType: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
    isDefinition: true
    commentId: N:Firesplash.GameDevAssets.SocketIOPlus.EngineIO
  Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EIOPacketType:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EIOPacketType
        name: DataTypes.EIOPacketType
        nameWithType: DataTypes.EIOPacketType
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EIOPacketType
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EIOPacketType
        name: DataTypes.EIOPacketType
        nameWithType: DataTypes.EIOPacketType
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EIOPacketType
    isDefinition: true
    parent: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EIOPacketType
  Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState
        name: DataTypes.ConnectionState
        nameWithType: DataTypes.ConnectionState
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState
        name: DataTypes.ConnectionState
        nameWithType: DataTypes.ConnectionState
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState
    isDefinition: true
    parent: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionState
  Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket
        name: EngineIOPacket
        nameWithType: EngineIOPacket
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket
        name: EngineIOPacket
        nameWithType: EngineIOPacket
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket
    isDefinition: true
    parent: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket
  Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIOMessageReceivedEvent:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIOMessageReceivedEvent
        name: DataTypes.EngineIOMessageReceivedEvent
        nameWithType: DataTypes.EngineIOMessageReceivedEvent
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIOMessageReceivedEvent
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIOMessageReceivedEvent
        name: DataTypes.EngineIOMessageReceivedEvent
        nameWithType: DataTypes.EngineIOMessageReceivedEvent
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIOMessageReceivedEvent
    isDefinition: true
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIOMessageReceivedEvent
  Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionParameters:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionParameters
        name: DataTypes.ConnectionParameters
        nameWithType: DataTypes.ConnectionParameters
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionParameters
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionParameters
        name: DataTypes.ConnectionParameters
        nameWithType: DataTypes.ConnectionParameters
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionParameters
    isDefinition: true
    parent: Firesplash.GameDevAssets.SocketIOPlus.EngineIO
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.ConnectionParameters
  Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIOConnectionReadyEvent:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIOConnectionReadyEvent
        name: DataTypes.EngineIOConnectionReadyEvent
        nameWithType: DataTypes.EngineIOConnectionReadyEvent
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIOConnectionReadyEvent
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIOConnectionReadyEvent
        name: DataTypes.EngineIOConnectionReadyEvent
        nameWithType: DataTypes.EngineIOConnectionReadyEvent
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIOConnectionReadyEvent
    isDefinition: true
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIOConnectionReadyEvent
  Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIODisconnectEvent:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIODisconnectEvent
        name: DataTypes.EngineIODisconnectEvent
        nameWithType: DataTypes.EngineIODisconnectEvent
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIODisconnectEvent
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIODisconnectEvent
        name: DataTypes.EngineIODisconnectEvent
        nameWithType: DataTypes.EngineIODisconnectEvent
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIODisconnectEvent
    isDefinition: true
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIODisconnectEvent
  Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIOConnectErrorEvent:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIOConnectErrorEvent
        name: DataTypes.EngineIOConnectErrorEvent
        nameWithType: DataTypes.EngineIOConnectErrorEvent
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIOConnectErrorEvent
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIOConnectErrorEvent
        name: DataTypes.EngineIOConnectErrorEvent
        nameWithType: DataTypes.EngineIOConnectErrorEvent
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIOConnectErrorEvent
    isDefinition: true
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.DataTypes.EngineIOConnectErrorEvent
  System.ValueType:
    name:
      CSharp:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
      VB:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.ValueType
  System.SerializableAttribute:
    name:
      CSharp:
      - id: System.SerializableAttribute
        name: SerializableAttribute
        nameWithType: SerializableAttribute
        qualifiedName: System.SerializableAttribute
        isExternal: true
      VB:
      - id: System.SerializableAttribute
        name: SerializableAttribute
        nameWithType: SerializableAttribute
        qualifiedName: System.SerializableAttribute
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.SerializableAttribute
  System.SerializableAttribute.#ctor:
    name:
      CSharp:
      - id: System.SerializableAttribute.#ctor
        name: SerializableAttribute
        nameWithType: SerializableAttribute.SerializableAttribute
        qualifiedName: System.SerializableAttribute.SerializableAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.SerializableAttribute.#ctor
        name: SerializableAttribute
        nameWithType: SerializableAttribute.SerializableAttribute
        qualifiedName: System.SerializableAttribute.SerializableAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.SerializableAttribute
    commentId: M:System.SerializableAttribute.#ctor
  Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.State*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.State*
        name: State
        nameWithType: EngineIOClient.State
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.State
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.State*
        name: State
        nameWithType: EngineIOClient.State
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.State
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.State
  Global.UnityEvent`1:
    name:
      CSharp:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  Global.UnityEvent{Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket}:
    name:
      CSharp:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket
        name: EngineIOPacket
        nameWithType: EngineIOPacket
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket
        name: EngineIOPacket
        nameWithType: EngineIOPacket
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.UnityEvent`1
    commentId: '!:Global.UnityEvent{Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket}'
  Global.UnityEvent{ConnectionParameters}:
    name:
      CSharp:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Global.ConnectionParameters
        name: ConnectionParameters
        nameWithType: ConnectionParameters
        qualifiedName: ConnectionParameters
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Global.ConnectionParameters
        name: ConnectionParameters
        nameWithType: ConnectionParameters
        qualifiedName: ConnectionParameters
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.UnityEvent`1
    commentId: '!:Global.UnityEvent{ConnectionParameters}'
  Global.UnityEvent`2:
    name:
      CSharp:
      - id: Global.UnityEvent`2
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityEvent`2
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:Global.UnityEvent`2'
  Global.UnityEvent{System.Boolean,System.String}:
    name:
      CSharp:
      - id: Global.UnityEvent`2
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityEvent`2
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.UnityEvent`2
    commentId: '!:Global.UnityEvent{System.Boolean,System.String}'
  Global.UnityEvent{System.Exception}:
    name:
      CSharp:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: System.Exception
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: Global.UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: System.Exception
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Global.UnityEvent`1
    commentId: '!:Global.UnityEvent{System.Exception}'
  Global.EngineIOMessageReceivedEvent:
    name:
      CSharp:
      - id: Global.EngineIOMessageReceivedEvent
        name: EngineIOMessageReceivedEvent
        nameWithType: EngineIOMessageReceivedEvent
        qualifiedName: EngineIOMessageReceivedEvent
        isExternal: true
      VB:
      - id: Global.EngineIOMessageReceivedEvent
        name: EngineIOMessageReceivedEvent
        nameWithType: EngineIOMessageReceivedEvent
        qualifiedName: EngineIOMessageReceivedEvent
        isExternal: true
    isDefinition: true
    commentId: '!:Global.EngineIOMessageReceivedEvent'
  Global.EngineIOConnectionReadyEvent:
    name:
      CSharp:
      - id: Global.EngineIOConnectionReadyEvent
        name: EngineIOConnectionReadyEvent
        nameWithType: EngineIOConnectionReadyEvent
        qualifiedName: EngineIOConnectionReadyEvent
        isExternal: true
      VB:
      - id: Global.EngineIOConnectionReadyEvent
        name: EngineIOConnectionReadyEvent
        nameWithType: EngineIOConnectionReadyEvent
        qualifiedName: EngineIOConnectionReadyEvent
        isExternal: true
    isDefinition: true
    commentId: '!:Global.EngineIOConnectionReadyEvent'
  Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.Awake*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.Awake*
        name: Awake
        nameWithType: EngineIOClient.Awake
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.Awake
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.Awake*
        name: Awake
        nameWithType: EngineIOClient.Awake
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.Awake
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.Awake
  Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.LateUpdate*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.LateUpdate*
        name: LateUpdate
        nameWithType: EngineIOClient.LateUpdate
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.LateUpdate
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.LateUpdate*
        name: LateUpdate
        nameWithType: EngineIOClient.LateUpdate
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.LateUpdate
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.LateUpdate
  Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.Connect*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.Connect*
        name: Connect
        nameWithType: EngineIOClient.Connect
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.Connect
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.Connect*
        name: Connect
        nameWithType: EngineIOClient.Connect
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.Connect
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.Connect
  Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.Disconnect*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.Disconnect*
        name: Disconnect
        nameWithType: EngineIOClient.Disconnect
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.Disconnect
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.Disconnect*
        name: Disconnect
        nameWithType: EngineIOClient.Disconnect
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.Disconnect
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.Disconnect
  Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.SendEngineIOMessage*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.SendEngineIOMessage*
        name: SendEngineIOMessage
        nameWithType: EngineIOClient.SendEngineIOMessage
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.SendEngineIOMessage
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.SendEngineIOMessage*
        name: SendEngineIOMessage
        nameWithType: EngineIOClient.SendEngineIOMessage
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.SendEngineIOMessage
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.SendEngineIOMessage
  System.Byte[]:
    name:
      CSharp:
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.SendEngineIOPacket*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.SendEngineIOPacket*
        name: SendEngineIOPacket
        nameWithType: EngineIOClient.SendEngineIOPacket
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.SendEngineIOPacket
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.SendEngineIOPacket*
        name: SendEngineIOPacket
        nameWithType: EngineIOClient.SendEngineIOPacket
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.SendEngineIOPacket
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.SendEngineIOPacket
  Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket[]:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket
        name: EngineIOPacket
        nameWithType: EngineIOPacket
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket
        name: EngineIOPacket
        nameWithType: EngineIOPacket
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.SendEngineIOPackets*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.SendEngineIOPackets*
        name: SendEngineIOPackets
        nameWithType: EngineIOClient.SendEngineIOPackets
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.SendEngineIOPackets
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.SendEngineIOPackets*
        name: SendEngineIOPackets
        nameWithType: EngineIOClient.SendEngineIOPackets
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.SendEngineIOPackets
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient.SendEngineIOPackets
  Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient
        name: EngineIOClient
        nameWithType: EngineIOClient
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient
        name: EngineIOClient
        nameWithType: EngineIOClient
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient
    isDefinition: true
    commentId: T:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOClient
  Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.#ctor*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.#ctor*
        name: EngineIOPacket
        nameWithType: EngineIOPacket.EngineIOPacket
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.EngineIOPacket
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.#ctor*
        name: EngineIOPacket
        nameWithType: EngineIOPacket.EngineIOPacket
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.EngineIOPacket
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.#ctor
  Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.Parse*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.Parse*
        name: Parse
        nameWithType: EngineIOPacket.Parse
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.Parse
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.Parse*
        name: Parse
        nameWithType: EngineIOPacket.Parse
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.Parse
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.Parse
  Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.IsBinaryMessage*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.IsBinaryMessage*
        name: IsBinaryMessage
        nameWithType: EngineIOPacket.IsBinaryMessage
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.IsBinaryMessage
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.IsBinaryMessage*
        name: IsBinaryMessage
        nameWithType: EngineIOPacket.IsBinaryMessage
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.IsBinaryMessage
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.IsBinaryMessage
  Global.EIOPacketType:
    name:
      CSharp:
      - id: Global.EIOPacketType
        name: EIOPacketType
        nameWithType: EIOPacketType
        qualifiedName: EIOPacketType
        isExternal: true
      VB:
      - id: Global.EIOPacketType
        name: EIOPacketType
        nameWithType: EIOPacketType
        qualifiedName: EIOPacketType
        isExternal: true
    isDefinition: true
    commentId: '!:Global.EIOPacketType'
  Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.GetPacketType*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.GetPacketType*
        name: GetPacketType
        nameWithType: EngineIOPacket.GetPacketType
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.GetPacketType
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.GetPacketType*
        name: GetPacketType
        nameWithType: EngineIOPacket.GetPacketType
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.GetPacketType
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.GetPacketType
  Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.GetPayloadBytes*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.GetPayloadBytes*
        name: GetPayloadBytes
        nameWithType: EngineIOPacket.GetPayloadBytes
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.GetPayloadBytes
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.GetPayloadBytes*
        name: GetPayloadBytes
        nameWithType: EngineIOPacket.GetPayloadBytes
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.GetPayloadBytes
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.GetPayloadBytes
  Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.GetPayloadString*:
    name:
      CSharp:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.GetPayloadString*
        name: GetPayloadString
        nameWithType: EngineIOPacket.GetPayloadString
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.GetPayloadString
      VB:
      - id: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.GetPayloadString*
        name: GetPayloadString
        nameWithType: EngineIOPacket.GetPayloadString
        qualifiedName: Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.GetPayloadString
    isDefinition: true
    commentId: Overload:Firesplash.GameDevAssets.SocketIOPlus.EngineIO.EngineIOPacket.GetPayloadString
